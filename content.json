{"posts":[{"title":"C语言网络编程","text":"项目名称：图书管理系统 开发技术：C语言，SQLite3 项目描述：项目分为两大部分，客户端和服务器端。客户端和建立连接后，可以进行注册和登录。通过不同的身份登录该系统后，管理员可以实现对图书信息的添加，删除，修改等操作，用户可以进行借书，还书等操作。 项目实现： 1.在服务器端建立套接字后，在服务器端搭建数据库，包括打开，关闭数据库，创建用户信息表和书籍信息表； 2.创建客户端套接字，使用TCP来进行服务器与端客户端的通信，在客户端创建菜单函数； 3.在服务器端使用IO多路复用并发服务器来接收消息。 完整代码：图书管理系统 项目介绍：基于C语言的网络编程项目：图书管理系统服务端支持客户端远程登录TCP支持多用户同时访问(服务器并发 多进程)数据库：使用了sqlite3，表为：user：id，passbook：id，name，author，note 功能介绍：功能1：管理员登录 管理员账号ID为1 只有一个1.添加图书2.修改图书3.查看所有图书 功能2：用户登录 D不为1的账号都为用户账号1.借阅图书2.还书2.查看所有图书3.用户注册 代码：编译时在后面加-lsqlite3:gcc -o server.c server -lsqlite3gcc -o client.c client -lsqlite3 编译后运行时在后面加上IP地址和端口号：./server 127.0.0.1 8888./client 127.0.0.1 8888 server.c123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320#include &quot;../include/serbook.h&quot;int main(int argc, char const *argv[]){ //数据库初始化 sqlite3 *sql_db=proc_init(); if (3 != argc) { printf(&quot;Usage : %s &lt;IP&gt; &lt;PORT&gt;\\n&quot;, argv[0]); exit(-1); } //创建套接字 int sockfd = socket_bind_listen(argv); //客户端信息的结构体 struct sockaddr_in client_addr; memset(&amp;client_addr, 0, sizeof(client_addr)); socklen_t client_addr_len = sizeof(client_addr); pid_t pid; int accept_fd; while (1) { accept_fd=accept(sockfd,(struct sockaddr *)&amp;client_addr, &amp;client_addr_len); printf(&quot;客户端[%s : %d]已连接\\n&quot;,inet_ntoa(client_addr.sin_addr),ntohs(client_addr.sin_port)); if (0&gt;(pid=fork())) ERRLOG(&quot;fork error&quot;); else if (0==pid) { child_do(accept_fd,sql_db); } else { if (signal(SIGCHLD, deal_signal) == SIG_ERR) ERRLOG(&quot;signal error&quot;); close(accept_fd); } } //关闭监听套接字 close(sockfd); return 0;}// 数据库初始化sqlite3 *proc_init(void){ //打开数据库文件 sqlite3 *sql_db=NULL; int ret=sqlite3_open(FILEname,&amp;sql_db); if (ret!=SQLITE_OK) { printf(&quot;打开数据库文件 失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); exit(-1); } //2建表 char sql_rbuf[256]=&quot;CREATE TABLE IF NOT EXISTS user(id INT PRIMARY KEY, pass TEXT)&quot;; ret=sqlite3_exec(sql_db,sql_rbuf,NULL,NULL,NULL); if (ret!=SQLITE_OK) { perror(&quot;建user表 失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); exit(-1); } //图书ID-图书名字-图书作者-图书备注 char sql_ubuf[256]=&quot;CREATE TABLE IF NOT EXISTS book(id INT PRIMARY KEY,name TEXT,author TEXT,note TEXT)&quot;; ret=sqlite3_exec(sql_db,sql_ubuf,NULL,NULL,NULL); if (ret!=SQLITE_OK) { perror(&quot;建book表 失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); exit(-1); } return sql_db;}//3. 创建套接字int socket_bind_listen(const char *argv[]){ int sockfd=socket(AF_INET,SOCK_STREAM,0); if (-1==sockfd) ERRLOG(&quot;创建套接字 失败&quot;); struct sockaddr_in server_addr; memset(&amp;server_addr,0,sizeof(server_addr)); server_addr.sin_family=AF_INET; server_addr.sin_port=htons(atoi(argv[2])); server_addr.sin_addr.s_addr=inet_addr(argv[1]); socklen_t server_addr_len=sizeof(server_addr); if (-1==bind(sockfd,(struct sockaddr *)&amp;server_addr,server_addr_len)) ERRLOG(&quot;sockaddr error&quot;); if (-1 == listen(sockfd, 10)) ERRLOG(&quot;listen error&quot;); return sockfd;}void child_do(int accept_fd, sqlite3 *sql_db){ MSG msg; memset(&amp;msg,0,sizeof(MSG)); while (recv(accept_fd, &amp;msg, sizeof(MSG), 0) &gt; 0) { printf(&quot;type = %d\\n&quot;, msg.type); switch (msg.type) { case A: //增加 do_add_s(accept_fd, &amp;msg, sql_db); break; case D: //删除 do_delete_s(accept_fd, &amp;msg, sql_db); break; case M: //修改 do_modify_s(accept_fd, &amp;msg, sql_db); break; case R: // 注册 do_register_s(accept_fd, &amp;msg, sql_db); break; case L: // 登录 do_login_s(accept_fd, &amp;msg, sql_db); break; case Qall: // 查询所有 all_query_s(accept_fd,sql_db); break; } } printf(&quot;客户端 退出\\n&quot;); exit(0);}// 信号处理函数void deal_signal(int s){ wait(NULL); }// 注册void do_register_s(int accept_fd, MSG *msg, sqlite3 *sql_db){ char sql_buf[512]; memset(sql_buf,0,sizeof(sql_buf)); sprintf(sql_buf,&quot;INSERT INTO user(id,pass) VALUES(%d,'%s')&quot;, msg-&gt;id, msg-&gt;pass); int ret=sqlite3_exec(sql_db,sql_buf,NULL,NULL,NULL); if (ret!=SQLITE_OK) { perror(&quot;注册失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); sprintf(msg-&gt;data, &quot;ID %d 已经存在&quot;, msg-&gt;id); } else { strcpy(msg-&gt;data, &quot;注册成功&quot;); } //发送数据 if (0 &gt;= send(accept_fd,msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;);}//登陆void do_login_s(int accept_fd, MSG *msg, sqlite3 *sql_db){ char sql_buf[256]={0}; //使用查询函数判断是否存在 sprintf(sql_buf,&quot;SELECT * FROM user WHERE id=%d AND pass='%s'&quot;, msg-&gt;id, msg-&gt;pass); char **result; int row = 0; int column = 0; int ret=sqlite3_get_table(sql_db,sql_buf,&amp;result,&amp;row,&amp;column,NULL); if (ret!=SQLITE_OK) { perror(&quot;查询失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); } if (0==row) { sprintf(msg-&gt;data,&quot;ID[%d]与密码[%s]不一致&quot;, msg-&gt;id,msg-&gt;pass); } else { strcpy(msg-&gt;data, &quot;登录成功&quot;); } //发送数据 if (0 &gt;= send(accept_fd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;);}// 查询所有void all_query_s(int accept_fd,sqlite3 *sql_db){ MSG msg; int i,x; char sql_buf[256]={0}; memset(&amp;msg,0,sizeof(msg)); //使用查询函数 strcpy(sql_buf,&quot;SELECT * FROM book&quot;); char **result; int row = 0; int column = 0; int ret=sqlite3_get_table(sql_db,sql_buf,&amp;result,&amp;row,&amp;column,NULL); if (ret!=SQLITE_OK) { perror(&quot;查询失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); } if (0==row) { sprintf(msg.data,&quot;ID[%d]为空&quot;, 0); } else { x=column; for (i= 0; i&lt;row; i++) { if (result[x]) { msg.id=atoi(result[x]); } x++; snprintf(msg.name,sizeof(msg.name),&quot;%s&quot;,result[x++]); snprintf(msg.author,sizeof(msg.author),&quot;%s&quot;,result[x++]); snprintf(msg.note,sizeof(msg.note),&quot;%s&quot;,result[x++]); //发送数据 if (0 &gt;= send(accept_fd,&amp;msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); memset(&amp;msg,0,sizeof(msg)); if (row==(i+1)) { strcpy(msg.data,&quot;**over**&quot;); //发送数据 if (0 &gt;= send(accept_fd,&amp;msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); } } } sqlite3_free_table(result);}// 增加void do_add_s(int accept_fd, MSG *msg, sqlite3 *sql_db){ char sql_buf[512]; memset(sql_buf,0,sizeof(sql_buf)); sprintf(sql_buf,&quot;INSERT INTO book(id,name,author,note) VALUES(%d,'%s','%s','%s')&quot;, msg-&gt;id, msg-&gt;name,msg-&gt;author,msg-&gt;note); int ret=sqlite3_exec(sql_db,sql_buf,NULL,NULL,NULL); if (ret!=SQLITE_OK) { perror(&quot;添加失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); sprintf(msg-&gt;data, &quot;ID为 %d 的图书已经存在&quot;, msg-&gt;id); } else { strcpy(msg-&gt;data, &quot;添加成功&quot;); } //发送数据 if (0 &gt;= send(accept_fd,msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;);}//删除void do_delete_s(int accept_fd, MSG *msg, sqlite3 *sql_db){ char sql_buf[256]={0}; //填写sql语句 sprintf(sql_buf,&quot;DELETE FROM book WHERE id=%d&quot;,msg-&gt;id); //执行sql语句 int ret = sqlite3_exec(sql_db, sql_buf, NULL, NULL, NULL); if (ret!=SQLITE_OK) { perror(&quot;查询失败&quot;); printf(&quot;errcode[%d] errmsg[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); } else { strcpy(msg-&gt;data, &quot;借阅成功&quot;); } //发送数据 if (0 &gt;= send(accept_fd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); memset(msg,0,sizeof(MSG));}// 修改void do_modify_s(int accept_fd, MSG *msg, sqlite3 *sql_db){ char sql_buff[512] = {0}; // pass ,name ,sex ,age,pay,job sprintf(sql_buff,&quot;UPDATE book SET name='%s',author='%s',note='%s' WHERE id=%d&quot;, msg-&gt;name,msg-&gt;author,msg-&gt;note,msg-&gt;id); //执行sql语句 int ret = sqlite3_exec(sql_db, sql_buff, NULL, NULL, NULL); if (ret != SQLITE_OK) { perror(&quot;修改失败&quot;); printf(&quot;返回值[%d] 错误信息[%s]\\n&quot;, ret, sqlite3_errmsg(sql_db)); exit(-1); } strcpy(msg-&gt;data, &quot;修改成功&quot;); //发送数据 if (0 &gt;= send(accept_fd,msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); memset(msg,0,sizeof(MSG));} serbook.h12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#ifndef __SERBOOK_H__#define __SERBOOK_H__#include &lt;stdio.h&gt;#include &lt;sqlite3.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt; // memset#include &lt;sys/types.h&gt; #include &lt;sys/socket.h&gt;#include &lt;netinet/in.h&gt; // 信息结构体struct sockaddr_in#include &lt;signal.h&gt;#include &lt;netinet/in.h&gt; //inet_aton#include &lt;arpa/inet.h&gt;#include &lt;unistd.h&gt; // fork#include &lt;sys/wait.h&gt;/*数据库文件名字*/#define FILEname &quot;ser.db&quot;#define ERRLOG(errmsg) \\ do \\ { \\ printf(&quot;%s--%s(%d):&quot;, __FILE__, __func__, __LINE__); \\ perror(errmsg); \\ } while (0)#define R 1 // 注册#define L 2 // 登录#define M 4 // 修改#define A 5 // 增加#define D 6 // 删除#define Qall 7 // 查询所有//信息结构体typedef struct{ int type; //选择 int id; //用户ID char name[64]; //图书名字 char pass[64]; // password密码 char data[256]; //emark返回数据 char author[64]; //图书作者 char note[256]; //图书备注}MSG;sqlite3 *proc_init(void);int socket_bind_listen(const char *argv[]);void child_do(int accept_fd, sqlite3 *sql_db);void deal_signal(int s);void do_register_s(int accept_fd, MSG *msg, sqlite3 *sql_db);void do_login_s(int accept_fd, MSG *msg, sqlite3 *sql_db);void all_query_s(int accept_fd,sqlite3 *sql_db);void do_add_s(int accept_fd, MSG *msg, sqlite3 *sql_db);void do_delete_s(int accept_fd, MSG *msg, sqlite3 *sql_db);void do_modify_s(int accept_fd, MSG *msg, sqlite3 *sql_db);#endif client.c123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320#include &quot;../include/clibook.h&quot;int errnum=0;int main(int argc, char const *argv[]){ int ret; if (3 != argc) { printf(&quot;Usage : %s &lt;IP&gt; &lt;PORT&gt;\\n&quot;, argv[0]); exit(-1); } // 1. 创建套接字 int sockfd = socket_connect(argv); MSG msg; memset(&amp;msg, 0, sizeof(MSG)); int n; while (1) { printf(&quot;=====================================\\n&quot;); printf(&quot;= 1.管理员登录 =\\n&quot;); printf(&quot;= 2.用户登录 =\\n&quot;); printf(&quot;= 3.用户注册 =\\n&quot;); printf(&quot;= 4.退出 =\\n&quot;); printf(&quot;======================================\\n&quot;); printf(&quot;请输入选项: &quot;); scanf(&quot;%d&quot;, &amp;n); switch (n) { case 1: do_login(sockfd, &amp;msg); if(msg.id==1) { goto next; } else{ printf(&quot;该账号非管理员账号\\n&quot;); } break; case 2: do_login(sockfd, &amp;msg); if(msg.id!=1) { goto next2; } else{ printf(&quot;该账号为管理员账号\\n&quot;); } break; case 3: do_register(sockfd, &amp;msg); break; case 4: exit(0); break; } }next: while (1) { printf(&quot;=====================================\\n&quot;); printf(&quot;= 1.添加图书 =\\n&quot;); printf(&quot;= 2.修改图书 =\\n&quot;); printf(&quot;= 3.查看所有图书 =\\n&quot;); printf(&quot;= 4.退出 =\\n&quot;); printf(&quot;=====================================\\n&quot;); printf(&quot;请输入选项: &quot;); scanf(&quot;%d&quot;, &amp;n); switch (n) { case 1: //添加图书 do_add(sockfd, &amp;msg); break; case 2: //修改图书 do_modify(sockfd, &amp;msg); break; case 3: //查看所有图书 all_query(sockfd, &amp;msg); break; case 4: exit(-1); break; } }next2: while (1) { printf(&quot;=====================================\\n&quot;); printf(&quot;= 1.借阅图书 =\\n&quot;); printf(&quot;= 2.查看所有图书 =\\n&quot;); printf(&quot;= 3.退出 =\\n&quot;); printf(&quot;=====================================\\n&quot;); printf(&quot;请输入选项: &quot;); scanf(&quot;%d&quot;, &amp;n); switch (n) { case 1: //借阅图书（删除） do_delete(sockfd, &amp;msg); break; case 2: //查看所有图书 all_query(sockfd, &amp;msg); break; case 3: exit(-1); break; } } close(sockfd); return 0;}// 创建套接字int socket_connect(const char *argv[]){ int sockfd = socket(AF_INET, SOCK_STREAM, 0); if (-1 == sockfd) ERRLOG(&quot;创建套接字失败&quot;); struct sockaddr_in server_addr; memset(&amp;server_addr, 0, sizeof(server_addr)); server_addr.sin_family = AF_INET; server_addr.sin_port = htons(atoi(argv[2])); server_addr.sin_addr.s_addr = inet_addr(argv[1]); socklen_t server_addr_len = sizeof(server_addr); //与服务器建立连接 if (-1 == connect(sockfd, (struct sockaddr *)&amp;server_addr, server_addr_len)) { ERRLOG(&quot;listen error&quot;); exit(-1); } printf(&quot;---连接服务器成功---\\n&quot;); return sockfd;}// 1.注册void do_register(int sockfd, MSG *msg){ memset(msg, 0, sizeof(MSG)); msg-&gt;type = R; printf(&quot;输入ID: &quot;); scanf(&quot;%d&quot;, &amp;msg-&gt;id); printf(&quot;输入密码: &quot;); scanf(&quot;%s&quot;, msg-&gt;pass); //发送数据 if (0 &gt;= send(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); //接收数据并输出 if (0 &gt;= recv(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); printf(&quot;%s\\n&quot;, msg-&gt;data);}// 2.登录int do_login(int sockfd, MSG *msg){ char NO[32] = &quot;n&quot;; char unlogin[128]={0}; msg-&gt;type = L; printf(&quot;输入ID: &quot;); scanf(&quot;%d&quot;, &amp;msg-&gt;id); printf(&quot;输入密码: &quot;); scanf(&quot;%s&quot;, msg-&gt;pass); //发送数据 if (0 &gt;= send(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error ?&quot;); //接收数据并输出 if (0 &gt;= recv(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;recv error&quot;); printf(&quot;%s\\n&quot;, msg-&gt;data); sprintf(unlogin,&quot;ID[%d]与密码[%s]不一致&quot;, msg-&gt;id,msg-&gt;pass); if (strcmp(msg-&gt;data,unlogin)== 0) { errnum++; if (3==errnum) { errnum=0; exit(0); } } if (strcmp(msg-&gt;data,&quot;登陆成功&quot;) == 0) { printf(&quot;登陆成功&quot;); } return 0;}// 7. 查询所有void all_query(int sockfd, MSG *msg){ memset(msg, 0, sizeof(MSG)); int flag=0; char zoor[64]={0}; sprintf(zoor,&quot;ID[%d]为空&quot;, 0); msg-&gt;type = Qall; //发送数据 if (0 &gt;= send(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); while (1) { //接收数据并输出 if (0 &gt;= recv(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;recv error&quot;); if (strcmp(msg-&gt;data, zoor) == 0) { printf(&quot;%s\\n&quot;, msg-&gt;data); } if (strcmp(msg-&gt;data,&quot;**over**&quot;) == 0) { printf(&quot;输出成功\\n&quot;); break; } else { if (0==flag) { printf(&quot;ID| NAME | AUTHOR | NOTE |\\n&quot;); flag=1; } printf(&quot;%d %s %s %s\\n&quot;, msg-&gt;id, msg-&gt;name, msg-&gt;author, msg-&gt;note); memset(msg, 0, sizeof(MSG)); } } flag=0;}// 增加图书void do_add(int sockfd, MSG *msg){ memset(msg, 0, sizeof(MSG)); msg-&gt;type = A; printf(&quot;输入图书ID:&quot;); scanf(&quot;%d&quot;, &amp;msg-&gt;id); printf(&quot;输入图书名字:&quot;); scanf(&quot;%s&quot;, msg-&gt;name); printf(&quot;输入作者名字:&quot;); scanf(&quot;%s&quot;, msg-&gt;author); printf(&quot;输入图书备注:&quot;); scanf(&quot;%s&quot;, msg-&gt;note); //发送数据 if (0 &gt;= send(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); //接收数据并输出 if (0 &gt;= recv(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); printf(&quot;%s\\n&quot;, msg-&gt;data);}//删除void do_delete(int sockfd, MSG *msg){ printf(&quot;输入要借阅图书的ID: &quot;); scanf(&quot;%d&quot;, &amp;msg-&gt;id); msg-&gt;type = D; //发送数据 if (0 &gt;= send(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); //接收数据并输出 if (0 &gt;= recv(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;recv error&quot;); printf(&quot;%s\\n&quot;, msg-&gt;data);}// 修改void do_modify(int sockfd, MSG *msg){ printf(&quot;输入修改要修改的图书ID: &quot;); scanf(&quot;%d&quot;, &amp;msg-&gt;id); char NO[32] = &quot;n&quot;; int flag=0; msg-&gt;type = M; printf(&quot;开始修改图书ID: [%d] 信息\\n&quot;, msg-&gt;id); printf(&quot;修改图书名称(y/n): &quot;); scanf(&quot;%s&quot;, NO); if (strcmp(NO, &quot;y&quot;) == 0 || strcmp(NO, &quot;Y&quot;) == 0) { memset(msg-&gt;name, 0, sizeof(msg-&gt;name)); printf(&quot;新名称: &quot;); scanf(&quot;%s&quot;, msg-&gt;name); flag=1; } printf(&quot;修改图书作者(y/n): &quot;); scanf(&quot;%s&quot;, NO); if (strcmp(NO, &quot;y&quot;) == 0 || strcmp(NO, &quot;Y&quot;) == 0) { memset(msg-&gt;author, 0, sizeof(msg-&gt;author)); printf(&quot;新作者: &quot;); scanf(&quot;%s&quot;, msg-&gt;author); flag=1; } printf(&quot;修改图书备注(y/n): &quot;); scanf(&quot;%s&quot;, NO); if (strcmp(NO, &quot;y&quot;) == 0 || strcmp(NO, &quot;Y&quot;) == 0) { memset(msg-&gt;note, 0, sizeof(msg-&gt;note)); printf(&quot;新备注: &quot;); scanf(&quot;%s&quot;, msg-&gt;note); flag=1; } if (0==flag) { printf(&quot;没有任何修改\\n&quot;); } else { //发送数据 if (0 &gt;= send(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;send error&quot;); //接收数据并输出 if (0 &gt;= recv(sockfd, msg, sizeof(MSG), 0)) ERRLOG(&quot;recv error&quot;); if (strcmp(msg-&gt;data, &quot;修改成功&quot;) == 0) { printf(&quot;%s\\n&quot;, msg-&gt;data); } }} clibook.h12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#ifndef __CLIBOOK_H__#define __CLIBOOK_H__#include &lt;stdio.h&gt;#include &lt;sqlite3.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt; // memset#include &lt;sys/types.h&gt; #include &lt;sys/socket.h&gt;#include &lt;netinet/in.h&gt; // 信息结构体struct sockaddr_in#include &lt;signal.h&gt;#include &lt;netinet/in.h&gt; //inet_aton#include &lt;arpa/inet.h&gt;#include &lt;unistd.h&gt; #define ERRLOG(errmsg) \\ do \\ { \\ printf(&quot;%s--%s(%d):&quot;, __FILE__, __func__, __LINE__); \\ perror(errmsg); \\ } while (0)#define R 1 // 注册#define L 2 // 登录#define M 4 // 修改#define A 5 // 增加#define D 6 // 删除#define Qall 7 // 查询所有#define N 32//信息结构体typedef struct{ int type; //选择 int id; //用户ID char name[64]; //图书名字 char pass[64]; // password密码 char data[256]; //emark返回数据 char author[64]; //图书作者 char note[256]; //图书备注}MSG;int socket_connect(const char *argv[]);void do_register(int sockfd, MSG *msg);int do_login(int sockfd, MSG *msg);void all_query(int sockfd, MSG *msg);void do_add(int sockfd, MSG *msg);void do_delete(int sockfd, MSG *msg);void do_modify(int sockfd, MSG *msg);#endif","link":"/posts/undefined.html"},{"title":"Butterfly主题的美化","text":"本篇文章是博主自己的美化日记，记录以防之后出错找不到问题🤣 本文章参考博主安知鱼的Butterfly重装日记 npm切换淘宝源123npm config set registry https://registry.npm.taobao.org# 切回源npm config set registry https://registry.npmjs.org/ 安装Hexo1234npm install hexo-cli -ghexo initnpm install hexo-deployer-git --savenpm install hexo-renderer-pug hexo-renderer-stylus --save 安装Butterfly1git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly 修改_config.yml以下为我自己的config 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: 小星球🍏subtitle: ''description: '我永远喜欢小盈💕'keywords:author: 小星language: zh-CNtimezone: ''# URL## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'url: http://guxing.funpermalink: :year/:month/:day/:title/permalink_defaults:pretty_urls: trailing_index: true # Set to false to remove trailing 'index.html' from permalinks trailing_html: true # Set to false to remove trailing '.html' from permalinks# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: enable: true # Open external links in new tab field: site # Apply to the whole site exclude: ''filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: '' wrap: true hljs: falseprismjs: enable: false preprocess: true line_number: true tab_replace: ''# Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Metadata elements## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/metameta_generator: true# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss## updated_option supports 'mtime', 'date', 'empty'updated_option: 'mtime'# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Include / Exclude file(s)## include:/exclude: options only apply to the 'source/' folderinclude:exclude:ignore:# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: butterfly# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: 'git' repository: git@github.com:GuxingBo/GuxingBo.github.io.git branch: main 配置自定义css新建文件[Blog]/source/css/custom.css,在custom.css中填入以下内容以下为博主自己的css 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869 /* 夜间模式遮罩透明 */ [data-theme=&quot;dark&quot;] #footer::before { background: transparent !important; } [data-theme=&quot;dark&quot;] #page-header::before { background: transparent !important; }/* 页脚透明 */ #footer { background: transparent !important; }/* 顶部加载渐变条 */ .pace { -webkit-pointer-events: none; pointer-events: none; -webkit-user-select: none; -moz-user-select: none; user-select: none; z-index: 2000; position: fixed; margin: auto; top: 4px; left: 0; right: 0; height: 8px; border-radius: 8px; width: 7rem; background: #eaecf2; border: 1px #e3e8f7; overflow: hidden}.pace-inactive .pace-progress { opacity: 0; transition: .3s ease-in}.pace .pace-progress { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -o-box-sizing: border-box; box-sizing: border-box; -webkit-transform: translate3d(0, 0, 0); -moz-transform: translate3d(0, 0, 0); -ms-transform: translate3d(0, 0, 0); -o-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); max-width: 200px; position: absolute; z-index: 2000; display: block; top: 0; right: 100%; height: 100%; width: 100%; /* linear-gradient(to right, #3494e6, #ec6ead) */ background: linear-gradient(to right, #43cea2, #3866ca); animation: gradient 2s ease infinite; background-size: 200%}.pace.pace-inactive { opacity: 0; transition: .3s; top: -8px} 不要忘记在主题_config.yml中搜索 Inject 添加以下代码，将自定义 csscustom.css引入 123inject:head: - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot; media=&quot;defer&quot; onload=&quot;this.media='all'&quot;&gt; 字数统计安装依赖1npm install hexo-wordcount --save 在主题配置文件_config.yml中更改配置项1234567# wordcount (字数统计)# see https://butterfly.js.org/posts/ceeb73f/#字数统计wordcount: enable: true post_wordcount: true min2read: true total_wordcount: true 本地搜索安装依赖1npm install hexo-generator-search --save 在_config.yml文件中新增配置项12345# 本地搜索：https://github.com/wzpan/hexo-generator-searchsearch: path: search.xml field: all content: true 在主题配置文件_config.yml中更改配置项12345# Local searchlocal_search: enable: true preload: false CDN: 文章双栏参考：https://zfe.space/post/hexo-butterfly-article-double-row.html 安装依赖1npm i hexo-butterfly-article-double-row --save 在_config.yml文件中新增配置项123# 文章双栏butterfly_article_double_row: enable: true 留言板：薇尔莉特信封安装依赖1npm install hexo-butterfly-envelope --save 在_config.yml中添加配置项12345678910111213141516171819202122 # envelope_comment# see https://akilar.top/posts/e2d3c450/# envelope_comment# see https://akilar.top/posts/e2d3c450/envelope_comment: enable: true #控制开关 custom_pic: cover: https://cdn.cbd.int//hexo-butterfly-envelope/lib/violet.jpg #信笺头部图片 line: https://cdn.cbd.int/hexo-butterfly-envelope/lib/line.png #信笺底部图片 beforeimg: https://cdn.cbd.int/hexo-butterfly-envelope/lib/before.png # 信封前半部分 afterimg: https://cdn.cbd.int/hexo-butterfly-envelope/lib/after.png # 信封后半部分 message: #信笺正文，多行文本，写法如下 - 本站有哪些做得好或者不好的地方？ - 或者你有什么改进的建议？ - 又或者你有什么具体的问题需要咨询？ - 都可以在下方评论区留言哦～ bottom: XLyb #仅支持单行文本 height: #1050px，信封划出的高度 path: #【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html front_matter: #【可选】comments页面的 front_matter 配置 title: 留言板 comments: true 在主题配置文件config.yml中menu处新增1留言板: /comments/ || fas fa-envelope 页脚github徽标和计时器参考: https://www.npmjs.com/package/hexo-butterfly-footer-beautify 安装依赖1npm install hexo-butterfly-footer-beautify --save 在_config.yml中添加配置项12345678910111213141516171819202122232425262728293031323334353637383940 # footer_beautify# 页脚计时器：[Native JS Timer](https://akilar.top/posts/b941af/)# 页脚徽标：[Add Github Badge](https://akilar.top/posts/e87ad7f8/)footer_beautify: enable: timer: true # 计时器开关 bdage: true # 徽标开关 priority: 5 #过滤器优先权 enable_page: all # 应用页面 exclude: # - /posts/ # - /about/ layout: # 挂载容器类型 type: id name: footer-wrap index: 0 # 计时器部分配置项 runtime_js: /js/runtime.js runtime_css: https://npm.elemecdn.com/anzhiyu-blog@2.0.4/css/runtime/runtime.min.css # 徽标部分配置项 swiperpara: 0 #若非0，则开启轮播功能，每行徽标个数 bdageitem: - link: https://hexo.io/ #徽标指向网站链接 shields: https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo #徽标API message: 博客框架为Hexo_v6.3.0 #徽标提示语 - link: https://butterfly.js.org/ shields: https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender message: 主题版本Butterfly_v4.5.1 - link: https://www.jsdelivr.com/ shields: https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;logo=jsDelivr message: 本站使用JsDelivr为静态资源提供CDN加速 - link: https://github.com/ shields: https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub message: 本站项目由Github托管 - link: http://creativecommons.org/licenses/by-nc-sa/4.0/ shields: https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris message: 本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可 # swiper_css: https://cdn.cbd.int/hexo-butterfly-swiper/lib/swiper.min.css # swiper_js: https://cdn.cbd.int/hexo-butterfly-swiper/lib/swiper.min.js # swiperbdage_init_js: https://cdn.cbd.int/hexo-butterfly-footer-beautify/lib/swiperbdage_init.min.js 新建文件[Blog]/source/js/runtime.js,在runtime.js中填入以下内容12345678910111213141516171819202122232425var now = new Date();function createtime() { var grt = new Date(&quot;04/01/2021 00:00:00&quot;); now.setTime(now.getTime() + 250); var days = (now - grt) / 1e3 / 60 / 60 / 24, dnum = Math.floor(days), hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum, hnum = Math.floor(hours); 1 == String(hnum).length &amp;&amp; (hnum = &quot;0&quot; + hnum); var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum, mnum = Math.floor(minutes); 1 == String(mnum).length &amp;&amp; (mnum = &quot;0&quot; + mnum); var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum, snum = Math.round(seconds); 1 == String(snum).length &amp;&amp; (snum = &quot;0&quot; + snum); let currentTimeHtml = &quot;&quot;; (currentTimeHtml = hnum &lt; 18 &amp;&amp; hnum &gt;= 9 ? `&lt;img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.4/img/badge/安知鱼-上班摸鱼中.svg' title='距离月入25k也就还差一个大佬带我~'&gt;&lt;span class='textTip'&gt; &lt;br&gt; 本站居然运行了 ${dnum} 天&lt;/span&gt;&lt;span id='runtime'&gt; ${hnum} 小时 ${mnum} 分 ${snum} 秒 &lt;/span&gt; &lt;i class='fas fa-heartbeat' style='color:red'&gt;&lt;/i&gt;` : `&lt;img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.4/img/badge/安知鱼-下班啦.svg' title='下班了就该开开心心的玩耍，嘿嘿~'&gt;&lt;span class='textTip'&gt; &lt;br&gt; 本站居然运行了 ${dnum} 天&lt;/span&gt;&lt;span id='runtime'&gt; ${hnum} 小时 ${mnum} 分 ${snum} 秒 &lt;/span&gt; &lt;i class='fas fa-heartbeat' style='color:red'&gt;&lt;/i&gt;`), document.getElementById(&quot;workboard&quot;) &amp;&amp; (document.getElementById(&quot;workboard&quot;).innerHTML = currentTimeHtml);}setInterval(() =&gt; { createtime();}, 250); 电子钟参考：https://anzhiy.cn/posts/fc18.html 安装依赖1npm install hexo-butterfly-clock-anzhiyu --save 在_config.yml中添加配置项123456789101112131415161718192021# electric_clock# see https://anzhiy.cn/posts/fc18.htmlelectric_clock: enable: true # 开关 priority: 5 #过滤器优先权 enable_page: all # 应用页面 exclude: # - /posts/ # - /about/ layout: # 挂载容器类型 type: class name: sticky_layout index: 0 loading: https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu@1.1.6/lib/loading.gif #加载动画自定义 clock_css: https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu@1.1.6/lib/clock.min.css clock_js: https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu@1.1.6/lib/clock.min.js ip_api: https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0 qweather_key: # 和风天气key gaud_map_key: # 高得地图web服务key default_rectangle: true # 开启后将一直显示rectangle位置的天气，否则将获取访问者的地理位置与天气 rectangle: 112.6534116,27.96920845 # 获取访问者位置失败时会显示该位置的天气，同时该位置为开启default_rectangle后的位置 Gitcalendar店长原教程：https://akilar.top/posts/1f9c68c9/API的获取参考店长的原教程 安装依赖1npm install hexo-filter-gitcalendar --save 在_config.yml中添加配置项1234567891011121314151617181920212223# hexo-filter-gitcalendar# see https://akilar.top/posts/1f9c68c9/gitcalendar: enable: true # 开关 priority: 5 #过滤器优先权 enable_page: / # 应用页面 # butterfly挂载容器 layout: # 挂载容器类型 type: id name: recent-posts index: 0 user: anzhiyu-c #git用户名 apiurl: &quot;https://python-github-calendar-api-spk83h666-anzhiyu-c.vercel.app&quot; minheight: pc: 280px #桌面端最小高度 mibile: 0px #移动端最小高度 # color: &quot;['#e4dfd7', '#f9f4dc', '#f7e8aa', '#f7e8aa', '#f8df72', '#fcd217', '#fcc515', '#f28e16', '#fb8b05', '#d85916', '#f43e06']&quot; #橘黄色调 color: &quot;['#ebedf0', '#fdcdec', '#fc9bd9', '#fa6ac5', '#f838b2', '#f5089f', '#c4067e', '#92055e', '#540336', '#48022f', '#30021f']&quot; #浅紫色调 # color: &quot;['#ebedf0', '#f0fff4', '#dcffe4', '#bef5cb', '#85e89d', '#34d058', '#28a745', '#22863a', '#176f2c', '#165c26', '#144620']&quot; #翠绿色调 # color: &quot;['#ebedf0', '#f1f8ff', '#dbedff', '#c8e1ff', '#79b8ff', '#2188ff', '#0366d6', '#005cc5', '#044289', '#032f62', '#05264c']&quot; #天青色调 container: .recent-post-item(style='width:100%;height:auto;padding:10px;') #父元素容器，需要使用pug语法 gitcalendar_css: https://cdn.cbd.int/hexo-filter-gitcalendar/lib/gitcalendar.css gitcalendar_js: https://cdn.cbd.int/hexo-filter-gitcalendar/lib/gitcalendar.js 友情链接美化 参考: https://anzhiy.cn/posts/292d.html 站点动态 title站点公祭日自动变灰判定那年今日","link":"/posts/undefined.html"},{"title":"C语言中的一些函数使用","text":"通过C语言实现数组的输入、输出，求和、平均值、最大值、最小值以及数据输出的冒泡排序： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;stdio.h&gt;#define SIZE 5int main(){ float src[SIZE]={0}; int i=0; int j=0; float t=0; float sum=0; float arv=0; float max=0; float min=0; printf(&quot;请输入%d个数\\n&quot;,SIZE); //输入数组 for(i=0;i&lt;SIZE;i++) { scanf(&quot;%f&quot;,&amp;src[i]); } for(i=0;i&lt;SIZE;i++) //求和 { sum+=src[i]; } arv=sum/SIZE; //求平均值 for(max=src[0],min=src[0],i=1;i&lt;SIZE;i++) //求最大值最小值 { if(max&lt;src[i]) { max=src[i]; }else min=src[i]; } for(i=0;i&lt;SIZE-1;i++) //冒泡排序 { for(j=0;j&lt;SIZE-1-i;j++) { if(src[j]&gt;src[j+1]) { t=src[j]; src[j]=src[j+1]; src[j+1]=t; } } } for(i=0;i&lt;SIZE;i++) { printf(&quot;%.2f &quot;,src[i]); } printf(&quot;sum=%.2f arv=%.2f max=%.2f min=%.2f\\n&quot;,sum,arv,max,min); return 0;} 通过C语言求输入字符串的长度： 12345678910111213141516#include &lt;stdio.h&gt;int main(){ char src[100] = {0}; printf(&quot;请输入一个字符串&quot;); scanf(&quot;%s&quot;,src); int i = 0; while(src[i] != '\\0') { i++; } printf(&quot;这个字符串的长度是%d\\n&quot;,i); return 0;} C语言中strcat函数的使用： 1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define M 10#define N 10int main(){ char src1[M] = {0}; char src2[M] = {0}; printf(&quot;请输入src2和src2，注意不能超过%d个字符\\n&quot;,M-1); gets(src1); gets(src2); //gets没有越界检查 if((strlen(src1) + strlen(src2) + 1) &gt; sizeof(src1)) { printf(&quot;src大小不够用\\n&quot;); return -1; } strcat(src1, src2); //strcat不会进行越界检查 puts(src1); return 0;} C语言中stcrmp函数的使用： 1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define S 20int main(){ char src1[S] = {0}; char src2[S] = {0}; printf(&quot;请输入src1和src2，注意不能超过%d个字符\\n&quot;,S-1); gets(src1); gets(src2); //gets不会进行越界检查 if((strlen(src1) + strlen(src2) + 1) &gt; sizeof(src1)) { printf(&quot;src大小不够用\\n&quot;); return -1; } int ret = strcmp(src1, src2); if(ret &gt;0) { printf(&quot;src1 &gt; src2\\n&quot;); } else if(ret == 0) { printf(&quot;src1 == src2\\n&quot;); } else { printf(&quot;src1 &lt; src2\\n&quot;); } return 0;} C语言中strcpy函数的使用： 123456789101112131415161718192021222324#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define M 10#define N 1000int main(){ char src1[M] = {0}; char src2[N] = {0}; gets(src1); gets(src2); //进行越界检查 if((strlen(src2) + 1) &gt; sizeof(src1)) { printf(&quot;src2太长了\\n&quot;); return -1; } strcpy(src1, src2); puts(src1); return 0;}","link":"/posts/undefined.html"},{"title":"Shell脚本","text":"Shell脚本 c语言：编译性语言，强类型语言（对数据类型区分的很清楚） shell脚本：解释性语言（不需要编译），弱类型语言，一堆命令的集合 创建一个脚本文件vi 1.sh 123#!/bin/bash#告诉计算机使用哪个版本的shell来解析代码cal；date: 执行时没有权限，需要人为去添加权限 chmod 777 1.sh或者chmod a+x 1.sh Shell变量自定义变量shell允许用户建立 变量存储类型，它不支持数据类型 注意： 1.任何赋值给变量的值都被shell解释为一串字符 2.要取用变量的值，只需要在变量前面加一个$ 3.等号的左右两侧不能有空格 命名规范： 1.由数字、字母下划线组成，且首字母不能为数字 2.shell中变量通常用大写标识 123456789#!bin/bashINT=12FOLAT=1.34STRING=&quot;hello&quot;echo &quot;INT = $INT&quot;echo &quot;FLOAT = $FLOAT&quot;echo &quot;STRING = $STRING&quot; 预定义变量 变量 含义 $0 当前脚本的文件名。 $n（n≥1） 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是 $1，第二个参数是 $2。 $# 传递给脚本或函数的参数个数。 $* 传递给脚本或函数的所有参数。 $@ 传递给脚本或函数的所有参数。当被双引号&quot; &quot;包含时，$@ 与 $* 稍有不同。 $? 上个命令的退出状态，或函数的返回值。 $$ 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。 Shell程序和语句说明性语句1# 注释内容 功能性语句输出： echo 自带换行参数 echo -n 不换行 1234#!/bin/bashecho &quot;hello&quot;echo -n &quot;hello shell&quot; 输入： read -p 添加提示语 12345678910111213#!/bin/bashecho &quot;输入俩个整数&quot;read NUM1 NUM2echo &quot;NUM1 = $NUM1 NUM2=$NUM2&quot;read -p &quot;请输入俩个小数&quot; NUM3 NUM4echo &quot;NUM3 = $NUM3 NUM4=$NUM4&quot;#read换行read -p &quot;请输入俩个字符&quot; NUM5 NUM6echo &quot;NUM5 = $NUM5 NUM6=$NUM6&quot;","link":"/posts/undefined.html"},{"title":"Linux常用命令","text":"Linux常用命令ls命令就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。 常用参数搭配： 1234567ls -a 列出目录所有文件，包含以.开始的隐藏文件ls -A 列出除.及..的其它文件ls -r 反序排列ls -t 以文件修改时间排序ls -S 以文件大小排序ls -h 以易读大小显示ls -l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来 实例： (1) 按易读方式按时间反序排序，并显示文件详细信息 1ls -lhrt (2) 按大小反序显示文件详细信息 1ls -lrS (3)列出当前目录中所有以”t”开头的目录的详细内容 1ls -l t* (4) 列出文件绝对路径（不包含隐藏文件） 1ls | sed &quot;s:^:`pwd`/:&quot; (5) 列出文件绝对路径（包含隐藏文件） 1find $pwd -maxdepth 1 | xargs ls -ld cd 命令cd(changeDirectory) 命令语法： 1cd [目录名] 说明：切换当前目录至 dirName。 实例： （1）进入要目录 1cd / （2）进入 “home” 目录 1cd ~ （3）进入上一次工作路径 1cd - （4）把上个命令的参数作为cd参数使用。 1cd !$ pwd 命令pwd 命令用于查看当前工作目录路径。 实例： （1）查看当前路径 1pwd （2）查看软链接的实际路径 1pwd -P mkdir 命令mkdir 命令用于创建文件夹。 可用选项： 12mkdir -m: 对新建目录设置存取权限，也可以用 chmod 命令设置;mkdir -p: 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录。 实例： （1）当前工作目录下创建名为 t的文件夹 1mkdir t （2）在 tmp 目录下创建路径为 test/t1/t 的目录，若不存在，则创建： 1mkdir -p /tmp/test/t1/t rm 命令删除一个目录中的一个或多个文件或目录，如果没有使用 -r 选项，则 rm 不会删除目录。如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。 1rm [选项] 文件… 实例： （1）删除任何 .log 文件，删除前逐一询问确认： 1rm -i *.log （2）删除 test 子目录及子目录中所有档案删除，并且不用确认： 1rm -rf test （3）删除以 -f 开头的文件 1rm -- -f* rmdir 命令从一个目录中删除一个或多个子目录项，删除某目录时也必须具有对其父目录的写权限。 注意：不能删除非空目录 实例： （1）当 parent 子目录被删除后使它也成为空目录的话，则顺便一并删除： 1rmdir -p parent/child/child11 mv 命令移动文件或修改文件名，根据第二参数类型（如目录，则移动文件；如为文件则重命令该文件）。 当第二个参数为目录时，第一个参数可以是多个以空格分隔的文件或目录，然后移动第一个参数指定的多个文件到第二个参数指定的目录中。 实例： （1）将文件 test.log 重命名为 test1.txt 1mv test.log test1.txt （2）将文件 log1.txt,log2.txt,log3.txt 移动到根的 test3 目录中 1mv llog1.txt log2.txt log3.txt /test3 （3）将文件 file1 改名为 file2，如果 file2 已经存在，则询问是否覆盖 1mv -i log1.txt log2.txt （4）移动当前文件夹下的所有文件到上一级目录 1mv * ../ cp 命令将源文件复制至目标文件，或将多个源文件复制至目标目录。 注意：命令行复制，如果目标文件已经存在会提示是否覆盖，而在 shell 脚本中，如果不加 -i 参数，则不会提示，而是直接覆盖！ 123cp -i 提示cp -r 复制目录及目录内所有项目cp -a 复制的文件与原文件时间一样 实例： （1）复制 a.txt 到 test 目录下，保持原文件时间，如果原文件存在提示是否覆盖。 1cp -ai a.txt test （2）为 a.txt 建立一个链接（快捷方式） 1cp -s a.txt link_a.txt cat 命令cat 主要有三大功能： 1.一次显示整个文件: 1cat filename 2.从键盘创建一个文件: 1cat &gt; filename 只能创建新文件，不能编辑已有文件。 3.将几个文件合并为一个文件: 123cat file1 file2 &gt; filecat -n 输出所有行号cat -b 对非空输出行号 实例： （1）把 log2012.log 的文件内容加上行号后输入 log2013.log 这个文件里 1cat -n log2012.log log2013.log （2）把 log2012.log 和 log2013.log 的文件内容加上行号（空白行不加）之后将内容附加到 log.log 里 1cat -b log2012.log log2013.log log.log （3）使用 here doc 生成新文件 12345678910cat &gt;log.txt &lt;&lt;EOF&gt;Hello&gt;World&gt;PWD=$(pwd)&gt;EOFls -l log.txtcat log.txtHelloWorldPWD=/opt/soft/test （4）反向列示 1234tac log.txtPWD=/opt/soft/testWorldHello more 命令功能类似于 cat, more 会以一页一页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示。 命令参数： 123456789+n 从第n行开始显示-n 定义屏幕大小为n行+/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示 -c 从顶部清屏，然后显示-d 提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能-l 忽略Ctrl+l（换页）字符-p 通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似-s 把连续的多个空行显示为一行-u 把文件内容中的下画线去掉 常用操作命令： 123456789Enter 向下 n 行，需要定义。默认为 1 行Ctrl+F 向下滚动一屏空格键 向下滚动一屏Ctrl+B 返回上一屏= 输出当前行的行号:f 输出文件名和当前行的行号V 调用vi编辑器!命令 调用Shell，并执行命令q 退出more 实例： （1）显示文件中从第3行起的内容 1more +3 text.txt （2）在所列出文件目录详细信息，借助管道使每次显示 5 行 1ls -l | more -5 按空格显示下 5 行。 less 命令less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。 常用命令参数： 12345678910111213141516171819-i 忽略搜索时的大小写-N 显示每行的行号-o &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来-s 显示连续空行为一行/ 字符串：向下搜索“字符串”的功能? 字符串：向上搜索“字符串”的功能n： 重复前一个搜索（与 / 或 ? 有关）N： 反向重复前一个搜索（与 / 或 ? 有关）-x &lt;数字&gt; 将“tab”键显示为规定的数字空格b 向后翻一页d 向后翻半页h 显示帮助界面Q 退出less 命令u 向前滚动半页y 向前滚动一行空格键 滚动一行回车键 滚动一页[pagedown]： 向下翻动一页[pageup]： 向上翻动一页 实例： （1）ps 查看进程信息并通过 less 分页显示 1ps -aux | less -N （2）查看多个文件 1less 1.log 2.log 可以使用 n 查看下一个，使用 p 查看前一个。 head 命令head 用来显示档案的开头至标准输出中，默认 head 命令打印其相应文件的开头 10 行。 常用参数： 1-n &lt;行数&gt;显示的行数（行数为复数表示从最后向前数） 实例： （1）显示 1.log 文件中前 20 行 1head 1.log -n 20 （2）显示 1.log 文件前 20 字节 1head -c 20 log2014.log （3）显示 t.log最后 10 行 1head -n -10 t.log tail 命令用于显示指定文件末尾内容，不指定文件时，作为输入信息进行处理。常用查看日志文件。 常用参数： 12-f 循环读取（常用于查看递增的日志文件）-n &lt;行数&gt; 显示行数（从后向前） （1）循环读取逐渐增加的文件内容 1ping 127.0.0.1 &gt; ping.log &amp; 后台运行：可使用 jobs -l 查看，也可使用 fg 将其移到前台运行。 1tail -f ping.log （查看日志） which 命令在 linux 要查找某个文件，但不知道放在哪里了，可以使用下面的一些命令来搜索： 1234which 查看可执行文件的位置。whereis 查看文件的位置。locate 配合数据库查看文件位置。find 实际搜寻硬盘查询文件名称。 which 是在 PATH 就是指定的路径中，搜索某个系统命令的位置，并返回第一个搜索结果。使用 which 命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。 常用参数： 1whicj -n 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。 实例： （1）查看 ls 命令是否存在，执行哪个 1which ls （2）查看 which 1which which （3）查看 cd 1which cd（显示不存在，因为 cd 是内建命令，而 which 查找显示是 PATH 中的命令） 查看当前 PATH 配置： 1echo $PATH 或使用 env 查看所有环境变量及对应值 whereis 命令whereis 命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。whereis 及 locate 都是基于系统内建的数据库进行搜索，因此效率很高，而find则是遍历硬盘查找文件。 常用参数： 1234-b 定位可执行文件。-m 定位帮助文件。-s 定位源代码文件。-u 搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。 实例： （1）查找 locate 程序相关文件 1whereis locate （2）查找 locate 的源码文件 1whereis -s locate （3）查找 lcoate 的帮助文件 1whereis -m locate locate 命令locate 通过搜寻系统内建文档数据库达到快速找到档案，数据库由 updatedb 程序来更新，updatedb 是由 cron daemon 周期性调用的。默认情况下 locate 命令在搜寻数据库时比由整个由硬盘资料来搜寻资料来得快，但较差劲的是 locate 所找到的档案若是最近才建立或 刚更名的，可能会找不到，在内定值中，updatedb 每天会跑一次，可以由修改 crontab 来更新设定值 (etc/crontab)。locate 与 find 命令相似，可以使用如 *、? 等进行正则匹配查找 常用参数： 123-l num（要显示的行数）-f 将特定的档案系统排除在外，如将proc排除在外-r 使用正则运算式做为寻找条件 实例： （1）查找和 pwd 相关的所有文件(文件名中包含 pwd） 1locate pwd （2）搜索 etc 目录下所有以 sh 开头的文件 1locate /etc/sh （3）查找 /var 目录下，以 reason 结尾的文件 1locate -r '^/var.*reason$'（其中.表示一个字符，*表示任务多个；.*表示任意多个字符） find 命令用于在文件树中查找文件，并作出相应的处理。 命令格式： 1find pathname -options [-print -exec -ok ...] 命令参数： 1234pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。-print： find命令将匹配的文件输出到标准输出。-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为'command' { } \\;，注意{ }和\\；之间的空格。-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。 命令选项： 12345678910111213141516171819202122-name 按照文件名查找文件-perm 按文件权限查找文件-user 按文件属主查找文件-group 按照文件所属的组来查找文件。-type 查找某一类型的文件，诸如： b - 块设备文件 d - 目录 c - 字符设备文件 l - 符号链接文件 p - 管道文件 f - 普通文件-size n :[c] 查找文件长度为n块文件，带有c时表文件字节大小-amin n 查找系统中最后N分钟访问的文件-atime n 查找系统中最后n*24小时访问的文件-cmin n 查找系统中最后N分钟被改变文件状态的文件-ctime n 查找系统中最后n*24小时被改变文件状态的文件-mmin n 查找系统中最后N分钟被改变文件数据的文件-mtime n 查找系统中最后n*24小时被改变文件数据的文件(用减号-来限定更改时间在距今n日以内的文件，而用加号+来限定更改时间在距今n日以前的文件。 )-maxdepth n 最大查找目录深度-prune 选项来指出需要忽略的目录。在使用-prune选项时要当心，因为如果你同时使用了-depth选项，那么-prune选项就会被find命令忽略-newer 如果希望查找更改时间比某个文件新但比另一个文件旧的所有文件，可以使用-newer选项 实例： （1）查找 48 小时内修改过的文件 1find -atime -2 （2）在当前目录查找 以 .log 结尾的文件。 . 代表当前目录 1find ./ -name '*.log' （3）查找 /opt 目录下 权限为 777 的文件 1find /opt -perm 777 （4）查找大于 1K 的文件 1find -size +1000c 查找等于 1000 字符的文件 1find -size 1000c -exec 参数后面跟的是 command 命令，它的终止是以 ; 为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。{} 花括号代表前面find查找出来的文件名。 实例： （5）在当前目录中查找更改时间在10日以前的文件并删除它们(无提醒） 1find . -type f -mtime +10 -exec rm -f {} \\; （6）当前目录中查找所有文件名以.log结尾、更改时间在5日以上的文件，并删除它们，只不过在删除之前先给出提示。 按y键删除文件，按n键不删除 1find . -name '*.log' mtime +5 -ok -exec rm {} \\; （7）当前目录下查找文件名以 passwd 开头，内容包含 “pkg” 字符的文件 1find . -f -name 'passwd*' -exec grep &quot;pkg&quot; {} \\; （8）用 exec 选项执行 cp 命令 1find . -name '*.log' -exec cp {} test3 \\; -xargs find 命令把匹配到的文件传递给 xargs 命令，而 xargs 命令每次只获取一部分文件而不是全部，不像 -exec 选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。 实例： （9）查找当前目录下每个普通文件，然后使用 xargs 来判断文件类型 1find . -type f -print | xargs file （10）查找当前目录下所有以 js 结尾的并且其中包含 ‘editor’ 字符的普通文件 12find . -type f -name &quot;*.js&quot; -exec grep -lF 'ueditor' {} \\;find -type f -name '*.js' | xargs grep -lF 'editor' （11）利用 xargs 执行 mv 命令 1find . -name &quot;*.log&quot; | xargs -i mv {} test4 （12）用 grep 命令在当前目录下的所有普通文件中搜索 hostnames 这个词，并标出所在行： 1find . -name \\*(转义） -type f -print | xargs grep -n 'hostnames' （13）查找当前目录中以一个小写字母开头，最后是 4 到 9 加上 .log 结束的文件： 1find . -name '[a-z]*[4-9].log' -print （14）在 test 目录查找不在 test4 子目录查找 1find test -path 'test/test4' -prune -o -print （15）实例1：查找更改时间比文件 log2012.log新但比文件 log2017.log 旧的文件 1find -newer log2012.log ! -newer log2017.log 使用 depth 选项： depth 选项可以使 find 命令向磁带上备份文件系统时，希望首先备份所有的文件，其次再备份子目录中的文件。实例：find 命令从文件系统的根目录开始，查找一个名为 CON.FILE 的文件。 它将首先匹配所有的文件然后再进入子目录中查找 1find / -name &quot;CON.FILE&quot; -depth -print chmod 命令用于改变 linux 系统文件或目录的访问权限。用它控制文件或目录的访问权限。该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。每一文件或目录的访问权限都有三组，每组用三位表示，分别为文件属主的读、写和执行权限；与属主同组的用户的读、写和执行权限；系统中其他用户的读、写和执行权限。可使用 ls -l test.txt 查找。以文件 log2012.log 为例： 1-rw-r--r-- 1 root root 296K 11-13 06:03 log2012.log 第一列共有 10 个位置，第一个字符指定了文件类型。在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是 d，表示是一个目录。从第二个字符开始到第十个 9 个字符，3 个字符一组，分别表示了 3 组用户对文件或者目录的权限。权限字符用横线代表空许可，r 代表只读，w 代表写，x 代表可执行。 常用参数： 12-c 当发生改变时，报告处理信息-R 处理指定目录以及其子目录下所有文件 权限范围： 1234u ：目录或者文件的当前的用户g ：目录或者文件的当前的群组o ：除了目录或者文件的当前用户或群组之外的用户或者群组a ：所有的用户及群组 权限代号： 12345r ：读权限，用数字4表示w ：写权限，用数字2表示x ：执行权限，用数字1表示- ：删除权限，用数字0表示s ：特殊权限 实例： （1）增加文件 t.log 所有用户可执行权限 1chmod a+x t.log （2）撤销原来所有的权限，然后使拥有者具有可读权限,并输出处理信息 1chmod u=r t.log -c （3）给 file 的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限 1chmod 751 t.log -c（或者：chmod u=rwx,g=rx,o=x t.log -c) （4）将 test 目录及其子目录所有文件添加可读权限 1chmod u+r,g+r,o+r -R text/ -c 19、tar 命令 用来压缩和解压文件。tar 本身不具有压缩功能，只具有打包功能，有关压缩及解压是调用其它的功能来完成。 弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件 常用参数： 12345678910-c 建立新的压缩文件-f 指定压缩文件-r 添加文件到已经压缩文件包中-u 添加改了和现有的文件到压缩包中-x 从压缩包中抽取文件-t 显示压缩文件中的内容-z 支持gzip压缩-j 支持bzip2压缩-Z 支持compress解压文件-v 显示操作过程 有关 gzip 及 bzip2 压缩: 12345gzip 实例：压缩 gzip fileName .tar.gz 和.tgz 解压：gunzip filename.gz 或 gzip -d filename.gz 对应：tar zcvf filename.tar.gz tar zxvf filename.tar.gzbz2实例：压缩 bzip2 -z filename .tar.bz2 解压：bunzip filename.bz2或bzip -d filename.bz2 对应：tar jcvf filename.tar.gz 解压：tar jxvf filename.tar.bz2 实例： （1）将文件全部打包成 tar 包 1tar -cvf log.tar 1.log,2.log 或tar -cvf log.* （2）将 /etc 下的所有文件及目录打包到指定目录，并使用 gz 压缩 1tar -zcvf /tmp/etc.tar.gz /etc （3）查看刚打包的文件内容（一定加z，因为是使用 gzip 压缩的） 1tar -ztvf /tmp/etc.tar.gz （4）要压缩打包 /home, /etc ，但不要 /home/dmtsai 1tar --exclude /home/dmtsai -zcvf myfile.tar.gz /home/* /etc chown 命令chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户 ID；组可以是组名或者组 ID；文件是以空格分开的要改变权限的文件列表，支持通配符。 12-c 显示更改的部分的信息-R 处理指定目录及子目录 实例： （1）改变拥有者和群组 并显示改变信息 1chown -c mail:mail log2012.log （2）改变文件群组 1chown -c :mail t.log （3）改变文件夹及子文件目录属主及属组为 mail 1chown -cR mail: test/ df 命令显示磁盘空间使用情况。获取硬盘被占用了多少空间，目前还剩下多少空间等信息，如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示： 123456-a 全部文件系统列表-h 以方便阅读的方式显示信息-i 显示inode信息-k 区块为1024字节-l 只显示本地磁盘-T 列出文件系统类型 实例： （1）显示磁盘使用情况 1df -l （2）以易读方式列出所有文件系统及其类型 1df -haT du 命令du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看： 命令格式： 1du [选项] [文件] 常用参数： 1234567-a 显示目录中所有文件大小-k 以KB为单位显示文件大小-m 以MB为单位显示文件大小-g 以GB为单位显示文件大小-h 以易读方式显示文件大小-s 仅显示总计-c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和 实例： （1）以易读方式显示文件夹内及子文件夹大小 1du -h scf/ （2）以易读方式显示文件夹内所有文件大小 1du -ah scf/ （3）显示几个文件或目录各自占用磁盘空间的大小，还统计它们的总和 1du -hc test/ scf/ （4）输出当前目录下各个子目录所使用的空间 1du -hc --max-depth=1 scf/ ln 命令功能是为文件在另外一个位置建立一个同步的链接，当在不同目录需要该问题时，就不需要为每一个目录创建同样的文件，通过 ln 创建的链接（link）减少磁盘占用量。 链接分类：软件链接及硬链接 软链接： 1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式2.软链接可以 跨文件系统 ，硬链接不可以3.软链接可以对一个不存在的文件名进行链接4.软链接可以对目录进行链接 硬链接: 1.硬链接，以文件副本的形式存在。但不占用实际空间。2.不允许给目录创建硬链接3.硬链接只有在同一个文件系统中才能创建 需要注意： 1.：ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；2.：ln的链接又分软链接和硬链接两种，软链接就是ln –s 源文件 目标文件，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接 ln 源文件 目标文件，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。3.：ln指令用在链接文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则会把前面指定的所有文件或目录复制到该目录中。若同时指定多个文件或目录，且最后的目的地并非是一个已存在的目录，则会出现错误信息。 常用参数： 123-b 删除，覆盖以前建立的链接-s 软链接（符号链接）-v 显示详细处理过程 实例： （1）给文件创建软链接，并显示操作信息 1ln -sv source.log link.log （2）给文件创建硬链接，并显示操作信息 1ln -v source.log link1.log （3）给目录创建软链接 1ln -sv /opt/soft/test/test3 /opt/soft/test/test5 date 命令显示或设定系统的日期与时间。 命令参数： 123456789101112131415-d&lt;字符串&gt; 显示字符串所指的日期与时间。字符串前后必须加上双引号。-s&lt;字符串&gt; 根据字符串来设置日期与时间。字符串前后必须加上双引号。-u 显示GMT。%H 小时(00-23)%I 小时(00-12)%M 分钟(以00-59来表示)%s 总秒数。起算时间为1970-01-01 00:00:00 UTC。%S 秒(以本地的惯用法来表示)%a 星期的缩写。%A 星期的完整名称。%d 日期(以01-31来表示)。%D 日期(含年月日)。%m 月份(以01-12来表示)。%y 年份(以00-99来表示)。%Y 年份(以四位数来表示)。 实例： （1）显示下一天 1date +%Y%m%d --date=&quot;+1 day&quot; //显示下一天的日期 （2）-d参数使用 1234567date -d &quot;nov 22&quot; 今年的 11 月 22 日是星期三date -d '2 weeks' 2周后的日期date -d 'next monday' (下周一的日期)date -d next-day +%Y%m%d（明天的日期）或者：date -d tomorrow +%Y%m%ddate -d last-day +%Y%m%d(昨天的日期) 或者：date -d yesterday +%Y%m%ddate -d last-month +%Y%m(上个月是几月)date -d next-month +%Y%m(下个月是几月) cal 命令可以用户显示公历（阳历）日历如只有一个参数，则表示年份(1-9999)，如有两个参数，则表示月份和年份： 常用参数： 1234-3 显示前一月，当前月，后一月三个月的日历-m 显示星期一为第一列-j 显示在当前年第几天-y [year]显示当前年[year]份的日历 实例： （1）显示指定年月日期 1cal 9 2012 （2）显示2013年每个月日历 1cal -y 2013 （3）将星期一做为第一列,显示前中后三月 1cal -3m grep 命令强大的文本搜索命令，grep(Global Regular Expression Print) 全局正则表达式搜索。grep 的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。命令格式： 1grep [option] pattern file|dir 常用参数： 123456789-A n --after-context显示匹配字符后n行-B n --before-context显示匹配字符前n行-C n --context 显示匹配字符前后n行-c --count 计算符合样式的列数-i 忽略大小写-l 只列出文件内容符合指定的样式的文件名称-f 从文件中读取关键词-n 显示匹配内容的所在文件中行数-R 递归查找文件夹 grep 的规则表达式: 12345678910111213141516^ #锚定行的开始 如：'^grep'匹配所有以grep开头的行。 $ #锚定行的结束 如：'grep$'匹配所有以grep结尾的行。 . #匹配一个非换行符的字符 如：'gr.p'匹配gr后接一个任意字符，然后是p。 * #匹配零个或多个先前字符 如：'*grep'匹配所有一个或多个空格后紧跟grep的行。.* #一起用代表任意字符。 [] #匹配一个指定范围内的字符，如'[Gg]rep'匹配Grep和grep。 [^] #匹配一个不在指定范围内的字符，如：'[^A-FH-Z]rep'匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。 \\(..\\) #标记匹配字符，如'\\(love\\)'，love被标记为1。 \\&lt; #锚定单词的开始，如:'\\&lt;grep'匹配包含以grep开头的单词的行。\\&gt; #锚定单词的结束，如'grep\\&gt;'匹配包含以grep结尾的单词的行。x\\{m\\} #重复字符x，m次，如：'0\\{5\\}'匹配包含5个o的行。 x\\{m,\\} #重复字符x,至少m次，如：'o\\{5,\\}'匹配至少有5个o的行。 x\\{m,n\\} #重复字符x，至少m次，不多于n次，如：'o\\{5,10\\}'匹配5--10个o的行。 \\w #匹配文字和数字字符，也就是[A-Za-z0-9]，如：'G\\w*p'匹配以G后跟零个或多个文字或数字字符，然后是p。 \\W #\\w的反置形式，匹配一个或多个非单词字符，如点号句号等。 \\b #单词锁定符，如: '\\bgrep\\b'只匹配grep。 实例： （1）查找指定进程 1ps -ef | grep svn （2）查找指定进程个数 1ps -ef | grep svn -c （3）从文件中读取关键词 1cat test1.txt | grep -f key.log （4）从文件夹中递归查找以grep开头的行，并只列出文件 1grep -lR '^grep' /tmp （5）查找非x开关的行内容 1grep '^[^x]' test.txt （6）显示包含 ed 或者 at 字符的内容行 1grep -E 'ed|at' test.txt wc 命令wc(word count)功能为统计指定的文件中字节数、字数、行数，并将统计结果输出命令格式： 1wc [option] file.. 命令参数： 1234-c 统计字节数-l 统计行数-m 统计字符数-w 统计词数，一个字被定义为由空白、跳格或换行字符分隔的字符串 实例： （1）查找文件的 行数 单词数 字节数 文件名 1wc text.txt 结果： 17 8 70 test.txt （2）统计输出结果的行数 1cat test.txt | wc -l ps 命令ps(process status)，用来查看当前运行的进程状态，一次性查看，如果需要动态连续结果使用 toplinux上进程有5种状态: 运行(正在运行或在运行队列中等待) 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号) 不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生) 僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放) 停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)ps 工具标识进程的5种状态码: 12345D 不可中断 uninterruptible sleep (usually IO)R 运行 runnable (on run queue)S 中断 sleepingT 停止 traced or stoppedZ 僵死 a defunct (”zombie”) process 命令参数： 12345678-A 显示所有进程a 显示所有进程-a 显示同一终端下所有进程c 显示进程真实名称e 显示环境变量f 显示进程间的关系r 显示当前终端运行的进程-aux 显示所有包含其它使用的进程 实例： （1）显示当前所有进程环境变量及进程间关系 1ps -ef （2）显示当前所有进程 1ps -A （3）与grep联用查找某进程 1ps -aux | grep apache （4）找出与 cron 与 syslog 这两个服务有关的 PID 号码 1ps aux | grep '(cron|syslog)' top 命令显示当前系统正在执行的进程的相关信息，包括进程 ID、内存占用率、CPU 占用率等 常用参数： 1234-c 显示完整的进程命令-s 保密模式-p &lt;进程号&gt; 指定进程显示-n &lt;次数&gt;循环显示次数 实例： 1234567top - 14:06:23 up 70 days, 16:44, 2 users, load average: 1.25, 1.32, 1.35Tasks: 206 total, 1 running, 205 sleeping, 0 stopped, 0 zombieCpu(s): 5.9%us, 3.4%sy, 0.0%ni, 90.4%id, 0.0%wa, 0.0%hi, 0.2%si, 0.0%stMem: 32949016k total, 14411180k used, 18537836k free, 169884k buffersSwap: 32764556k total, 0k used, 32764556k free, 3612636k cachedPID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 28894 root 22 0 1501m 405m 10m S 52.2 1.3 2534:16 java 前五行是当前系统情况整体的统计信息区。 第一行，任务队列信息，同 uptime 命令的执行结果，具体参数说明情况如下： 14:06:23 — 当前系统时间 up 70 days, 16:44 — 系统已经运行了70天16小时44分钟（在这期间系统没有重启过的吆！） 2 users — 当前有2个用户登录系统 load average: 1.15, 1.42, 1.44 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。 load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。 第二行，Tasks — 任务（进程），具体信息说明如下： 系统现在共有206个进程，其中处于运行中的有1个，205个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。 第三行，cpu状态信息，具体属性说明如下： 12345675.9%us — 用户空间占用CPU的百分比。3.4% sy — 内核空间占用CPU的百分比。0.0% ni — 改变过优先级的进程占用CPU的百分比90.4% id — 空闲CPU百分比0.0% wa — IO等待占用CPU的百分比0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比0.2% si — 软中断（Software Interrupts）占用CPU的百分比 备注：在这里CPU的使用比率和windows概念不同，需要理解linux系统用户空间和内核空间的相关知识！ 第四行，内存状态，具体信息如下： 123432949016k total — 物理内存总量（32GB）14411180k used — 使用中的内存总量（14GB）18537836k free — 空闲内存总量（18GB）169884k buffers — 缓存的内存量 （169M） 第五行，swap交换分区信息，具体信息说明如下： 123432764556k total — 交换区总量（32GB）0k used — 使用的交换区总量（0K）32764556k free — 空闲交换区总量（32GB）3612636k cached — 缓冲的交换区总量（3.6GB） 第六行，空行。 第七行以下：各进程（任务）的状态监控，项目列信息说明如下： 123456789101112PID — 进程idUSER — 进程所有者PR — 进程优先级NI — nice值。负值表示高优先级，正值表示低优先级VIRT — 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RESRES — 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATASHR — 共享内存大小，单位kbS — 进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程%CPU — 上次更新到现在的CPU时间占用百分比%MEM — 进程使用的物理内存百分比TIME+ — 进程使用的CPU时间总计，单位1/100秒COMMAND — 进程名称（命令名/命令行） top 交互命令 1234567h 显示top交互命令帮助信息c 切换显示命令名称和完整命令行m 以内存使用率排序P 根据CPU使用百分比大小进行排序T 根据时间/累计时间进行排序W 将当前设置写入~/.toprc文件中o或者O 改变显示项目的顺序 kill 命令发送指定的信号到相应进程。不指定型号将发送SIGTERM（15）终止指定进程。如果任无法终止该程序可用”-KILL” 参数，其发送的信号为SIGKILL(9) ，将强制结束进程，使用ps命令或者jobs 命令可以查看进程号。root用户将影响用户的进程，非root用户只能影响自己的进程。 常用参数： 12345-l 信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称-a 当处理当前进程时，不限制命令名和进程号的对应关系-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号-s 指定发送信号-u 指定用户 实例： （1）先使用ps查找进程pro1，然后用kill杀掉 1kill -9 $(ps -ef | grep pro1) free 命令显示系统内存使用情况，包括物理内存、交互区内存(swap)和内核缓冲区内存。 命令参数： 123456-b 以Byte显示内存使用情况-k 以kb为单位显示内存使用情况-m 以mb为单位显示内存使用情况-g 以gb为单位显示内存使用情况-s&lt;间隔秒数&gt; 持续显示内存-t 显示内存使用总合 实例： （1）显示内存使用情况 123freefree -kfree -m （2）以总和的形式显示内存的使用信息 1free -t （3）周期性查询内存使用情况 1free -s 10","link":"/posts/undefined.html"},{"title":"基于C++的学生选课系统","text":"项目名称：学生选课系统 开发技术：C++，SQLite3 项目描述：使用C++程序调用sqlite3数据库，并通过数据库的操作对学生和课程进行管理，包括课程的增删改查，学生的增删改查。程序入口分为两个，一个是管理员入口（管理员无法注册）管理员可以对课程以及学生用户进行增删改查的操作。另一个入口是学生入口（管理员来对学生进行注册），学生可以修改自己的密码以及进行选课退课等操作。 完整代码：学生选课系统 部分代码：admin.h12345678910111213141516171819202122232425262728#pragma once#include &lt;iostream&gt;#include &lt;string&gt;#include&lt;vector&gt;#include &quot;sqlite.h&quot;#include &quot;course.h&quot;#include &quot;student.h&quot;using namespace std;class admin{public: int login(sqlite&amp; db); void add_course(sqlite&amp; db); void delete_course(sqlite&amp; db); void change_course(sqlite&amp; db); void show_course(sqlite&amp; db, vector &lt;string&gt;&amp; v); void add_student(sqlite&amp; db); void delete_student(sqlite&amp; db); void change_student(sqlite&amp; db); void show_student(sqlite&amp; db, vector &lt;string&gt;&amp; v);private: string name; string pwd;}; admin.cpp1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465#include &quot;admin.h&quot;int admin::login(sqlite&amp; db){ cout &lt;&lt; &quot;---------------管理员登录页面---------------&quot; &lt;&lt; endl; cout &lt;&lt; &quot;请输入用户名：&quot;; cin &gt;&gt; name; cout &lt;&lt; &quot;请输入密码：&quot;; cin &gt;&gt; pwd; char sql[1024] = { 0 }; sprintf_s(sql, &quot;select *from admin where name= '%s' and pwd='%s'&quot;, name.data(), pwd.data()); db.login(sql); int a = 0; return 0;}void admin::add_course(sqlite&amp; db){ course _course; _course.cou_info(); _course.cou_insert_into_table(db);}void admin::delete_course(sqlite&amp; db){ course _course; _course.cou_del_info(); _course.cou_remove_from_table(db);}void admin::change_course(sqlite&amp; db){ course _course; _course.cou_che_info(); _course.cou_modify_table(db);}void admin::show_course(sqlite&amp; db, vector &lt;string&gt;&amp; v){ course _course; _course.cou_show_table(db, v);}void admin::add_student(sqlite&amp; db){ student _student; _student.stu_info(); _student.stu_insert_into_table(db);}void admin::delete_student(sqlite&amp; db){ student _student; _student.stu_del_info(); _student.stu_remove_from_table(db);}void admin::change_student(sqlite&amp; db){ student _student; _student.stu_che_info(); _student.stu_modify_table(db);}void admin::show_student(sqlite&amp; db, vector&lt;string&gt;&amp; v){ student _student; _student.stu_show_table(db, v);} main.h12345678#pragma once#include &quot;admin.h&quot;#include &quot;table.h&quot;#include &quot;menu.h&quot;#include &quot;student.h&quot;#include &quot;choose.h&quot;#include &quot;course.h&quot;#include&quot;sqlite.h&quot; main.cpp123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141#include &quot;main.h&quot;int main(){ sqlite db; db.initdb(); table fac; fac.create_course(db); //课程表 fac.create_student(db); //学生表 fac.create_choose(db); //选课表 fac.create_admin(db); //管理员表 admin root; student stu; menu men; choose cho; int a = 0; int b = 0; while (1) { flag: men.menu1(); int op = 0; cout &lt;&lt; &quot;请输入要操作的选项&quot; &lt;&lt; endl; cin &gt;&gt; op; if (3 == op) { return 0; } switch (op) { case(1): root.login(db); while (1) { men.menu2(); vector &lt;string&gt; v; int op = 0; cout &lt;&lt; &quot;请输入要操作的选项&quot; &lt;&lt; endl; cin &gt;&gt; op; if (10 == op) { return 0; } switch (op) { case(1): root.add_course(db); break; case(2): root.change_course(db); break; case(3): root.delete_course(db); break; case(4): v.clear(); root.show_course(db, v); break; case(5): root.add_student(db); break; case(6): root.change_student(db); break; case(7): root.delete_student(db); break; case(8): v.clear(); root.show_student(db, v); break; case(9): goto flag; break; default: cout &lt;&lt; &quot;输入有误，请重新选择&quot; &lt;&lt; endl; break; } } case(2): stu.stu_login(db); while(1) { men.menu3(); vector &lt;string&gt; v; int op = 0; cout &lt;&lt; &quot;请输入要操作的选项&quot; &lt;&lt; endl; cin &gt;&gt; op; if (7 == op) { return 0; } switch (op) { case(1): stu.change_pwd(db); break; case(2): v.clear(); root.show_course(db, v); cho.choose_insert(db); break; case(3): cho.choose_del(db); break; case(4): cho.choose_show(db); break; case(5): v.clear(); root.show_course(db,v); break; case(6): goto flag; break; default: cout &lt;&lt; &quot;输入有误，请重新选择&quot; &lt;&lt; endl; break; } } } } //cho.choose_show(db); //stu.stu_login(db); //root.login(); //root.add_course(db); //root.add_student(db); //root.change_course(db); //root.change_student(db); //root.delete_course(db); //root.delete_student(db); //vector &lt;string&gt; v; //root.show_course(db,v); //v.clear(); //root.show_student(db,v); return 0;}","link":"/posts/undefined.html"}],"tags":[{"name":"C","slug":"C","link":"/tags/C/"},{"name":"Bttterfly","slug":"Bttterfly","link":"/tags/Bttterfly/"},{"name":"Shell","slug":"Shell","link":"/tags/Shell/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"C++","slug":"C","link":"/tags/C/"}],"categories":[{"name":"C语言","slug":"C语言","link":"/categories/C%E8%AF%AD%E8%A8%80/"},{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"Linux","slug":"Linux","link":"/categories/Linux/"},{"name":"C++","slug":"C","link":"/categories/C/"}],"pages":[{"title":"关于","text":"还没有想好怎么写","link":"/about/index.html"},{"title":"友情链接","text":"还没有想好怎么写","link":"/friends/index.html"},{"title":"留言板","text":"有什么想说的就写下来吧────────────────────────────────────────████████──████████─████████──████████──██░░░░██──██░░░░██─██░░░░██──██░░░░██──████░░██──██░░████─████░░██──██░░████────██░░░░██░░░░██─────██░░░░██░░░░██──────████░░░░░░████─────████░░░░░░████────────██░░░░░░██─────────████░░████────────████░░░░░░████─────────██░░██──────────██░░░░██░░░░██─────────██░░██────────████░░██──██░░████───────██░░██────────██░░░░██──██░░░░██───────██░░██────────████████──████████───────██████───────","link":"/messages/index.html"},{"title":"","text":"/*! For license information please see twikoo.all.min.js.LICENSE.txt */ var e,t;e=this,t=function(){return function(){var e={3485:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(8190);Object.keys(r).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===r[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}}))}));var i=n(9565);Object.keys(i).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}))},8190:function(e,t){\"use strict\";var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.StorageType=t.AbstractStorage=t.AbstractSDKRequest=void 0,t.StorageType=n,function(e){e.local=\"local\",e.none=\"none\",e.session=\"session\"}(n||(t.StorageType=n={}));var r=function(){};t.AbstractSDKRequest=r;var i=function(){};t.AbstractStorage=i},9565:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.formatUrl=function(e,t,n){void 0===n&&(n={});var r=/\\?/.test(t),i=\"\";for(var o in n)\"\"===i?!r&&(t+=\"?\"):i+=\"&\",i+=o+\"=\"+encodeURIComponent(n[o]);return/^http(s)?\\:\\/\\//.test(t+=i)?t:\"\"+e+t}},8152:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LOGINTYPE=t.DATA_VERSION=void 0,t.getEndPoint=function(){return{BASE_URL:l,PROTOCOL:c}},t.getSdkName=function(){return s},t.getSdkVersion=function(){return a},t.setEndPoint=d,t.setRegionLevelEndpoint=function(e,t,n){d(t?\"//\"+e+\".\"+t+\".tcb-api.tencentcloudapi.com/web\":\"//\"+e+\".ap-shanghai.tcb-api.tencentcloudapi.com/web\",n)},t.setSdkName=function(e){s=e,i(e)},t.setSdkVersion=function(e){a=e};var r=n(5508),i=r.constants.setSdkName,o=r.constants.setProtocol,a=\"\",s=\"@cloudbase/js-sdk\";t.DATA_VERSION=\"2020-01-10\";var u,c=\"undefined\"!=typeof location&&\"http:\"===location.protocol?\"http:\":\"https:\",l=\"//tcb-api.tencentcloudapi.com/web\";function d(e,t){l=e,t&&(c=t,o(t))}t.LOGINTYPE=u,function(e){e.ANONYMOUS=\"ANONYMOUS\",e.WECHAT=\"WECHAT\",e.CUSTOM=\"CUSTOM\",e.NULL=\"NULL\"}(u||(t.LOGINTYPE=u={}))},6631:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.EVENTS=void 0,t.EVENTS={LOGIN_STATE_CHANGED:\"loginStateChanged\",LOGIN_STATE_EXPIRED:\"loginStateExpire\",LOGIN_TYPE_CHANGED:\"loginTypeChanged\",ANONYMOUS_CONVERTED:\"anonymousConverted\",ACCESS_TOKEN_REFRESHD:\"refreshAccessToken\"}},2183:function(e,t,n){\"use strict\";var r=n(3330);Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=t.cloudbase=void 0;var i=r(n(9767)),o=n(5508),a=r(n(9636)),s=n(9540),u=n(2341),c=n(6592),l=n(437),d=n(8152),f=function(){return f=Object.assign||function(e){for(var t,n=1,r=arguments.length;n3&&s&&Object.defineProperty(t,n,s),s},h=function(e,t){if(\"object\"===(\"undefined\"==typeof Reflect?\"undefined\":(0,i[\"default\"])(Reflect))&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(t){o(t)}}function s(e){try{u(r[\"throw\"](e))}catch(t){o(t)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))},m=function(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),\"throw\":s(1),\"return\":s(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(i=2&o[0]?r[\"return\"]:o[0]?r[\"throw\"]||((i=r[\"return\"])&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]2]>>>24-i%4*8&255;r.push((o>>>4).toString(16)),r.push((15&o).toString(16))}return r.join(\"\")},parse:function(e){for(var t=e.length,n=[],r=0;r>>3]|=parseInt(e.substr(r,2),16)2]>>>24-i%4*8&255;r.push(String.fromCharCode(o))}return r.join(\"\")},parse:function(e){for(var t=e.length,n=[],r=0;r>>2]|=(255&e.charCodeAt(r))>>24-o%4*8&255)>2]>>>24-(o+1)%4*8&255)>2]>>>24-(o+2)%4*8&255,s=0;s>6*(3-s)&63));var u=r.charAt(64);if(u)for(;i.length%4;)i.push(u);return i.join(\"\")},parse:function(e){var t=e.length,r=this._map,i=this._reverseMap;if(!i){i=this._reverseMap=[];for(var o=0;o>>2]|=(s|u)19)^m>>>10;c[p]=g+c[p-7]+v+c[p-16]}var _=r&i^r&o^i&o,y=(r>2)^(r>13)^(r>22),b=f+((s>6)^(s>11)^(s>25))+(s&l^~s&d)+u[p]+c[p];f=d,d=l,l=s,s=a+b|0,a=o,o=i,i=r,r=b+(y+_)|0}n[0]=n[0]+r|0,n[1]=n[1]+i|0,n[2]=n[2]+o|0,n[3]=n[3]+a|0,n[4]=n[4]+s|0,n[5]=n[5]+l|0,n[6]=n[6]+d|0,n[7]=n[7]+f|0},_doFinalize:function(){var e=this._data,n=e.words,r=8*this._nDataBytes,i=8*e.sigBytes;return n[i>>>5]|=128>9>92&&arguments[2]!==undefined?arguments[2]:null;u||(u=document.createElement(\"textarea\"),document.body.appendChild(u));var r=function(e){var t=window.getComputedStyle(e),n=t.getPropertyValue(\"box-sizing\"),r=parseFloat(t.getPropertyValue(\"padding-bottom\"))+parseFloat(t.getPropertyValue(\"padding-top\")),i=parseFloat(t.getPropertyValue(\"border-bottom-width\"))+parseFloat(t.getPropertyValue(\"border-top-width\"));return{contextStyle:l.map((function(e){return e+\":\"+t.getPropertyValue(e)})).join(\";\"),paddingSize:r,borderSize:i,boxSizing:n}}(e),i=r.paddingSize,o=r.borderSize,a=r.boxSizing,s=r.contextStyle;u.setAttribute(\"style\",s+\";\"+c),u.value=e.value||e.placeholder||\"\";var d=u.scrollHeight,f={};\"border-box\"===a?d+=o:\"content-box\"===a&&(d-=i),u.value=\"\";var p=u.scrollHeight-i;if(null!==t){var h=p*t;\"border-box\"===a&&(h=h+i+o),d=Math.max(h,d),f.minHeight=h+\"px\"}if(null!==n){var g=p*n;\"border-box\"===a&&(g=g+i+o),d=Math.min(g,d)}return f.height=d+\"px\",u.parentNode&&u.parentNode.removeChild(u),u=null,f}var f=n(9),p=n.n(f),h=n(21),g={name:\"ElInput\",componentName:\"ElInput\",mixins:[o.a,s.a],inheritAttrs:!1,inject:{elForm:{\"default\":\"\"},elFormItem:{\"default\":\"\"}},data:function(){return{textareaCalcStyle:{},hovering:!1,focused:!1,isComposing:!1,passwordVisible:!1}},props:{value:[String,Number],size:String,resize:String,form:String,disabled:Boolean,readonly:Boolean,type:{type:String,\"default\":\"text\"},autosize:{type:[Boolean,Object],\"default\":!1},autocomplete:{type:String,\"default\":\"off\"},autoComplete:{type:String,validator:function(e){return!0}},validateEvent:{type:Boolean,\"default\":!0},suffixIcon:String,prefixIcon:String,label:String,clearable:{type:Boolean,\"default\":!1},showPassword:{type:Boolean,\"default\":!1},showWordLimit:{type:Boolean,\"default\":!1},tabindex:String},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},validateState:function(){return this.elFormItem?this.elFormItem.validateState:\"\"},needStatusIcon:function(){return!!this.elForm&&this.elForm.statusIcon},validateIcon:function(){return{validating:\"el-icon-loading\",success:\"el-icon-circle-check\",error:\"el-icon-circle-close\"}[this.validateState]},textareaStyle:function(){return p()({},this.textareaCalcStyle,{resize:this.resize})},inputSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},inputDisabled:function(){return this.disabled||(this.elForm||{}).disabled},nativeInputValue:function(){return null===this.value||this.value===undefined?\"\":String(this.value)},showClear:function(){return this.clearable&&!this.inputDisabled&&!this.readonly&&this.nativeInputValue&&(this.focused||this.hovering)},showPwdVisible:function(){return this.showPassword&&!this.inputDisabled&&!this.readonly&&(!!this.nativeInputValue||this.focused)},isWordLimitVisible:function(){return this.showWordLimit&&this.$attrs.maxlength&&(\"text\"===this.type||\"textarea\"===this.type)&&!this.inputDisabled&&!this.readonly&&!this.showPassword},upperLimit:function(){return this.$attrs.maxlength},textLength:function(){return\"number\"==typeof this.value?String(this.value).length:(this.value||\"\").length},inputExceed:function(){return this.isWordLimitVisible&&this.textLength>this.upperLimit}},watch:{value:function(e){this.$nextTick(this.resizeTextarea),this.validateEvent&&this.dispatch(\"ElFormItem\",\"el.form.change\",[e])},nativeInputValue:function(){this.setNativeInputValue()},type:function(){var e=this;this.$nextTick((function(){e.setNativeInputValue(),e.resizeTextarea(),e.updateIconOffset()}))}},methods:{focus:function(){this.getInput().focus()},blur:function(){this.getInput().blur()},getMigratingConfig:function(){return{props:{icon:\"icon is removed, use suffix-icon / prefix-icon instead.\",\"on-icon-click\":\"on-icon-click is removed.\"},events:{click:\"click is removed.\"}}},handleBlur:function(e){this.focused=!1,this.$emit(\"blur\",e),this.validateEvent&&this.dispatch(\"ElFormItem\",\"el.form.blur\",[this.value])},select:function(){this.getInput().select()},resizeTextarea:function(){if(!this.$isServer){var e=this.autosize;if(\"textarea\"===this.type)if(e){var t=e.minRows,n=e.maxRows;this.textareaCalcStyle=d(this.$refs.textarea,t,n)}else this.textareaCalcStyle={minHeight:d(this.$refs.textarea).minHeight}}},setNativeInputValue:function(){var e=this.getInput();e&&e.value!==this.nativeInputValue&&(e.value=this.nativeInputValue)},handleFocus:function(e){this.focused=!0,this.$emit(\"focus\",e)},handleCompositionStart:function(e){this.$emit(\"compositionstart\",e),this.isComposing=!0},handleCompositionUpdate:function(e){this.$emit(\"compositionupdate\",e);var t=e.target.value,n=t[t.length-1]||\"\";this.isComposing=!Object(h.isKorean)(n)},handleCompositionEnd:function(e){this.$emit(\"compositionend\",e),this.isComposing&&(this.isComposing=!1,this.handleInput(e))},handleInput:function(e){this.isComposing||e.target.value!==this.nativeInputValue&&(this.$emit(\"input\",e.target.value),this.$nextTick(this.setNativeInputValue))},handleChange:function(e){this.$emit(\"change\",e.target.value)},calcIconOffset:function(e){var t=[].slice.call(this.$el.querySelectorAll(\".el-input__\"+e)||[]);if(t.length){for(var n=null,r=0;r0&&arguments[0]!==undefined?arguments[0]:{};if(!i.a.prototype.$isServer){if(\"string\"==typeof(e=_()({},b,e)).target&&(e.target=document.querySelector(e.target)),e.target=e.target||document.body,e.target!==document.body?e.fullscreen=!1:e.body=!0,e.fullscreen&&k)return k;var t=e.body?document.body:e.target,n=new y({el:document.createElement(\"div\"),data:e});return w(e,t,n),\"absolute\"!==n.originalPosition&&\"fixed\"!==n.originalPosition&&\"sticky\"!==n.originalPosition&&Object(l.addClass)(t,\"el-loading-parent--relative\"),e.fullscreen&&e.lock&&Object(l.addClass)(t,\"el-loading-parent--hidden\"),t.appendChild(n.$el),i.a.nextTick((function(){n.visible=!0})),e.fullscreen&&(k=n),n}};t[\"default\"]={install:function(e){e.use(m),e.prototype.$loading=E},directive:m,service:E}},9:function(e,t){e.exports=n(7002)}})},6262:function(e,t){\"use strict\";function n(e,t,r){this.$children.forEach((function(i){i.$options.componentName===e?i.$emit.apply(i,[t].concat(r)):n.apply(i,[e,t].concat([r]))}))}t.__esModule=!0,t[\"default\"]={methods:{dispatch:function(e,t,n){for(var r=this.$parent||this.$root,i=r.$options.componentName;r&&(!i||i!==e);)(r=r.$parent)&&(i=r.$options.componentName);r&&r.$emit.apply(r,[t].concat(n))},broadcast:function(e,t,r){n.call(this,e,t,r)}}}},7177:function(e,t,n){\"use strict\";t.__esModule=!0,n(964),t[\"default\"]={mounted:function(){},methods:{getMigratingConfig:function(){return{props:{},events:{}}}}}},3751:function(e,t){\"use strict\";t.__esModule=!0,t[\"default\"]=function(e,t){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:300,r=arguments.length>3&&arguments[3]!==undefined&&arguments[3];if(!e||!t)throw new Error(\"instance & callback is required\");var i=!1,o=function(){i||(i=!0,t&&t.apply(null,arguments))};r?e.$once(\"after-leave\",o):e.$on(\"after-leave\",o),setTimeout((function(){o()}),n+100)}},4210:function(e,t,n){\"use strict\";var r=n(3330)(n(9767));t.__esModule=!0,t.isInContainer=t.getScrollContainer=t.isScroll=t.getStyle=t.once=t.off=t.on=undefined;var i=\"function\"==typeof Symbol&&\"symbol\"===(0,r[\"default\"])(Symbol.iterator)?function(e){return(0,r[\"default\"])(e)}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":(0,r[\"default\"])(e)};t.hasClass=g,t.addClass=function(e,t){if(e){for(var n=e.className,r=(t||\"\").split(\" \"),i=0,o=r.length;i=0;i--)if(t[i].id===e){t.splice(i,1);break}}0===t.length&&(this.modalFade&&(0,a.addClass)(n,\"v-modal-leave\"),setTimeout((function(){0===t.length&&(n.parentNode&&n.parentNode.removeChild(n),n.style.display=\"none\",f.modalDom=undefined),(0,a.removeClass)(n,\"v-modal-leave\")}),200))}};Object.defineProperty(f,\"zIndex\",{configurable:!0,get:function(){return u||(c=c||(o[\"default\"].prototype.$ELEMENT||{}).zIndex||2e3,u=!0),c},set:function(e){c=e}}),o[\"default\"].prototype.$isServer||window.addEventListener(\"keydown\",(function(e){if(27===e.keyCode){var t=function(){if(!o[\"default\"].prototype.$isServer&&f.modalStack.length>0){var e=f.modalStack[f.modalStack.length-1];if(!e)return;return f.getInstance(e.id)}}();t&&t.closeOnPressEscape&&(t.handleClose?t.handleClose():t.handleAction?t.handleAction(\"cancel\"):t.close())}})),t[\"default\"]=f},8166:function(e,t,n){\"use strict\";t.__esModule=!0,t[\"default\"]=function(){if(o[\"default\"].prototype.$isServer)return 0;if(a!==undefined)return a;var e=document.createElement(\"div\");e.className=\"el-scrollbar__wrap\",e.style.visibility=\"hidden\",e.style.width=\"100px\",e.style.position=\"absolute\",e.style.top=\"-9999px\",document.body.appendChild(e);var t=e.offsetWidth;e.style.overflow=\"scroll\";var n=document.createElement(\"div\");n.style.width=\"100%\",e.appendChild(n);var r=n.offsetWidth;return e.parentNode.removeChild(e),a=t-r};var r,i=n(1848),o=(r=i)&&r.__esModule?r:{\"default\":r},a=void 0},1636:function(e,t){\"use strict\";t.__esModule=!0,t.isDef=function(e){return e!==undefined&&null!==e},t.isKorean=function(e){return/([(\\uAC00-\\uD7AF)|(\\u3130-\\u318F)])+/gi.test(e)}},7634:function(e,t,n){\"use strict\";var r=n(3330)(n(9767));t.__esModule=!0,t.isDefined=t.isUndefined=t.isFunction=undefined;var i=\"function\"==typeof Symbol&&\"symbol\"===(0,r[\"default\"])(Symbol.iterator)?function(e){return(0,r[\"default\"])(e)}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":(0,r[\"default\"])(e)};t.isString=function(e){return\"[object String]\"===Object.prototype.toString.call(e)},t.isObject=function(e){return\"[object Object]\"===Object.prototype.toString.call(e)},t.isHtmlElement=function(e){return e&&e.nodeType===Node.ELEMENT_NODE};var o,a=n(1848),s=(o=a)&&o.__esModule?o:{\"default\":o},u=function(e){return e&&\"[object Function]\"==={}.toString.call(e)};\"object\"===(\"undefined\"==typeof Int8Array?\"undefined\":i(Int8Array))||!s[\"default\"].prototype.$isServer&&\"function\"==typeof document.childNodes||(t.isFunction=u=function(e){return\"function\"==typeof e||!1}),t.isFunction=u,t.isUndefined=function(e){return void 0===e},t.isDefined=function(e){return e!==undefined&&null!==e}},964:function(e,t,n){\"use strict\";var r=n(3330)(n(9767));t.__esModule=!0,t.isMac=t.isEmpty=t.isEqual=t.arrayEquals=t.looseEqual=t.capitalize=t.kebabCase=t.autoprefixer=t.isFirefox=t.isEdge=t.isIE=t.coerceTruthyValueToArray=t.arrayFind=t.arrayFindIndex=t.escapeRegexpString=t.valueEquals=t.generateId=t.getValueByPath=undefined;var i=\"function\"==typeof Symbol&&\"symbol\"===(0,r[\"default\"])(Symbol.iterator)?function(e){return(0,r[\"default\"])(e)}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":(0,r[\"default\"])(e)};t.noop=function(){},t.hasOwn=function(e,t){return c.call(e,t)},t.toObject=function(e){for(var t={},n=0;nd.reach&&(d.reach=L.reach)}}}}}}function u(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function c(e,t,n){var r=t.next,i={value:n,prev:t,next:r};return t.next=i,r.prev=i,e.length++,i}function l(e,t,n){for(var r=t.next,i=0;i/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/i,name:/[^\\s'\"]+/}},cdata:{pattern://i,greedy:!0},tag:{pattern:/\\/=$\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^\\/]+/,inside:{punctuation:/^\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},r.languages.markup.tag.inside[\"attr-value\"].inside.entity=r.languages.markup.entity,r.languages.markup.doctype.inside[\"internal-subset\"].inside=r.languages.markup,r.hooks.add(\"wrap\",(function(e){\"entity\"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,\"&\"))})),Object.defineProperty(r.languages.markup.tag,\"addInlined\",{value:function(e,t){var n={};n[\"language-\"+t]={pattern:/(^$)/i,lookbehind:!0,inside:r.languages[t]},n.cdata=/^$/i;var i={\"included-cdata\":{pattern://i,inside:n}};i[\"language-\"+t]={pattern:/[\\s\\S]+/,inside:r.languages[t]};var o={};o[e]={pattern:RegExp(/(]*>)(?:))*\\]\\]>|(?!|&&=?|\\|\\|=?|[!=]==|>?=?|[-+*/%&|^!=]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),r.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,r.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:RegExp(/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source+/\\//.source+\"(?:\"+/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source+\"|\"+/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+\")\"+/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:r.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:r.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:r.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:r.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:r.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),r.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:r.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),r.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),r.languages.markup&&(r.languages.markup.tag.addInlined(\"script\",\"javascript\"),r.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\"javascript\")),r.languages.js=r.languages.javascript,function(){if(void 0!==r&&\"undefined\"!=typeof document){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var e=function(e,t){return\"✖ Error \"+e+\" while fetching file: \"+t},t=\"✖ Error: File does not exist or is empty\",n={js:\"javascript\",py:\"python\",rb:\"ruby\",ps1:\"powershell\",psm1:\"powershell\",sh:\"bash\",bat:\"batch\",h:\"c\",tex:\"latex\"},i=\"data-src-status\",o=\"loading\",a=\"loaded\",s=\"pre[data-src]:not([\"+i+'=\"'+a+'\"]):not(['+i+'=\"'+o+'\"])';r.hooks.add(\"before-highlightall\",(function(e){e.selector+=\", \"+s})),r.hooks.add(\"before-sanity-check\",(function(u){var c=u.element;if(c.matches(s)){u.code=\"\",c.setAttribute(i,o);var l=c.appendChild(document.createElement(\"CODE\"));l.textContent=\"Loading…\";var d=c.getAttribute(\"data-src\"),f=u.language;if(\"none\"===f){var p=(/\\.(\\w+)$/.exec(d)||[,\"none\"])[1];f=n[p]||p}r.util.setLanguage(l,f),r.util.setLanguage(c,f);var h=r.plugins.autoloader;h&&h.loadLanguages(f),function(n,r,i){var o=new XMLHttpRequest;o.open(\"GET\",n,!0),o.onreadystatechange=function(){4==o.readyState&&(o.status=400?i(e(o.status,o.statusText)):i(t))},o.send(null)}(d,(function(e){c.setAttribute(i,a);var t=function(e){var t=/^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(e||\"\");if(t){var n=Number(t[1]),r=t[2],i=t[3];return r?i?[n,Number(i)]:[n,undefined]:[n,n]}return undefined}(c.getAttribute(\"data-range\"));if(t){var n=e.split(/\\r\\n?|\\n/g),o=t[0],s=null==t[1]?n.length:t[1];o0?\"\".concat(this.repliesCount):\"\"}},methods:{onLike:function(){this.$emit(\"like\")},onReply:function(){this.$emit(\"reply\")}}};t.Z=u},7404:function(e,t,n){\"use strict\";var r=n(3330);Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var i=r(n(818)),o=r(n(8711)),a=r(n(2290)),s=r(n(2578)),u=r(n(2408)),c=r(n(8245)),l=n(2304),d=r(n(7848)),f={components:{TkAdminComment:s[\"default\"],TkAdminConfig:u[\"default\"],TkAdminImport:c[\"default\"]},props:{show:Boolean},data:function(){return{iconClose:d[\"default\"],loading:!0,version:\"\",needUpdate:!1,isLogin:!1,isSetPassword:!0,isSetCredentials:!1,credentials:\"\",password:\"\",passwordConfirm:\"\",loginErrorMessage:\"\",activeTabName:\"comment\"}},computed:{canRegist:function(){return!this.isSetPassword&&!!this.password&&this.password===this.passwordConfirm&&(this.isSetCredentials||this.credentials)}},methods:{t:l.t,onLogin:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n,r;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.password){t.next=3;break}return e.loginErrorMessage=(0,l.t)(\"ADMIN_PASSWORD_REQUIRED\"),t.abrupt(\"return\");case 3:return e.loading=!0,e.loginErrorMessage=\"\",n=(0,a[\"default\"])(e.password),t.next=8,(0,l.call)(e.$tcb,\"LOGIN\",{password:n});case 8:if(!(r=t.sent).result.message){t.next=13;break}e.loginErrorMessage=r.result.message,t.next=28;break;case 13:if(!r.result.ticket){t.next=27;break}return t.prev=14,t.next=17,e.$tcb.auth.customAuthProvider().signIn(r.result.ticket);case 17:l.logger.log(\"登录成功\"),e.password=\"\",e.checkAuth(),t.next=25;break;case 22:t.prev=22,t.t0=t[\"catch\"](14),l.logger.error(\"登录失败\",t.t0);case 25:t.next=28;break;case 27:0===r.result.code&&(l.logger.log(\"登录成功\"),localStorage.setItem(\"twikoo-access-token\",n),e.password=\"\",e.checkAuth());case 28:e.loading=!1;case 29:case\"end\":return t.stop()}}),t,null,[[14,22]])})))()},onLogout:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.loading=!0,!e.$tcb){t.next=8;break}return t.next=4,e.$tcb.auth.signOut();case 4:return t.next=6,e.$tcb.auth.anonymousAuthProvider().signIn();case 6:t.next=9;break;case 8:localStorage.removeItem(\"twikoo-access-token\");case 9:e.isLogin=!1,e.loading=!1;case 11:case\"end\":return t.stop()}}),t)})))()},onRegist:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n,r;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.loading=!0,n=(0,a[\"default\"])(e.password),t.next=4,(0,l.call)(e.$tcb,\"SET_PASSWORD\",{password:n,credentials:e.credentials});case 4:(r=t.sent).result.code?(e.loginErrorMessage=(0,l.t)(\"ADMIN_REGIST_FAILED\"),r.result.message&&(e.loginErrorMessage+=\"，\"+r.result.message),l.logger.warn(\"Twikoo 注册失败\",r)):(e.passwordMd5=\"\",e.isSetPassword=!0,e.onLogin()),e.loading=!1;case 7:case\"end\":return t.stop()}}),t)})))()},onShow:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.loading=!0,t.next=3,e.checkAuth();case 3:if(e.isLogin){t.next=7;break}return t.next=6,e.checkIfPasswordSet();case 6:e.focusPassword();case 7:e.loading=!1;case 8:case\"end\":return t.stop()}}),t)})))()},focusPassword:function(){var e=this;setTimeout((function(){e.$refs.focusme&&e.$refs.focusme.focus()}),500)},checkAuth:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n,r;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.$tcb){t.next=7;break}return t.next=3,e.$tcb.auth.getCurrenUser();case 3:n=t.sent,e.isLogin=\"CUSTOM\"===n.loginType,t.next=11;break;case 7:return t.next=9,(0,l.call)(e.$tcb,\"GET_CONFIG\");case 9:(r=t.sent)&&r.result&&r.result.config&&(e.isLogin=r.result.config.IS_ADMIN);case 11:case\"end\":return t.stop()}}),t)})))()},checkIfPasswordSet:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,(0,l.call)(e.$tcb,\"GET_PASSWORD_STATUS\");case 3:n=t.sent,e.version=n.result.version,e.isSetPassword=n.result.status,e.isSetCredentials=!e.$tcb,t.next=14;break;case 9:throw t.prev=9,t.t0=t[\"catch\"](0),e.needUpdate=!0,e.loading=!1,t.t0;case 14:case\"end\":return t.stop()}}),t,null,[[0,9]])})))()},onClose:function(){this.$emit(\"close\")}},watch:{show:function(e){e&&this.onShow()}}};t.Z=f},9454:function(e,t,n){\"use strict\";var r=n(3330);Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var i=r(n(818)),o=r(n(8711)),a=n(7588),s=n(2304),u=n(8521),c=r(n(610)),l=r(n(2948)),d={components:{TkAvatar:c[\"default\"],TkPagination:l[\"default\"]},data:function(){return{loading:!0,comments:[],serverConfig:{},serverVersion:this.$twikoo.serverConfig.VERSION,clientVersion:u.version,count:0,pageSize:5,currentPage:1,filter:{keyword:\"\",type:\"\"}}},methods:{t:s.t,displayCreated:function(e){return(0,s.timeago)(e.created)},convertLink:function(e){return(0,s.convertLink)(e)},getComments:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.loading=!0,t.next=3,(0,s.call)(e.$tcb,\"COMMENT_GET_FOR_ADMIN\",{per:e.pageSize,page:e.currentPage,keyword:e.filter.keyword,type:e.filter.type});case 3:(n=t.sent).result&&!n.result.code&&(e.count=n.result.count,e.comments=n.result.data),e.$nextTick((function(){(0,s.renderLinks)(e.$refs.comments),(0,s.renderMath)(e.$refs[\"comment-list\"],e.$twikoo.katex),e.highlightCode()})),e.loading=!1;case 7:case\"end\":return t.stop()}}),t)})))()},getConfig:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,s.call)(e.$tcb,\"GET_CONFIG_FOR_ADMIN\");case 2:(n=t.sent).result&&!n.result.code&&(e.serverConfig=n.result.config,e.checkConfig());case 4:case\"end\":return t.stop()}}),t)})))()},checkConfig:function(){var e=this;this.serverConfig.HIGHLIGHT||(this.serverConfig.HIGHLIGHT=\"true\");var t={},n=localStorage.getItem(\"twikoo\");n&&(t=JSON.parse(n)),[\"nick\",\"mail\",\"avatar\"].forEach((function(n){t[n]?e.serverConfig[n]=t[n]:e.serverConfig[n]=\"\"})),!t.nick&&this.serverConfig.BLOGGER_NICK&&(t.nick=this.serverConfig.BLOGGER_NICK),!t.mail&&this.serverConfig.BLOGGER_EMAIL&&(t.mail=this.serverConfig.BLOGGER_EMAIL),!t.link&&this.serverConfig.SITE_URL&&(t.link=this.serverConfig.SITE_URL),localStorage.setItem(\"twikoo\",JSON.stringify(t)),a.app.$emit(\"initMeta\")},onPageSizeChange:function(e){this.pageSize=e,this.getComments()},switchPage:function(e){this.currentPage=e,this.getComments()},handleView:function(e){window.open(\"\".concat(e.url,\"#\").concat(e._id))},handleDelete:function(e){var t=this;return(0,o[\"default\"])(i[\"default\"].mark((function n(){return i[\"default\"].wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(confirm((0,s.t)(\"ADMIN_COMMENT_DELETE_CONFIRM\"))){n.next=2;break}return n.abrupt(\"return\");case 2:return t.loading=!0,n.next=5,(0,s.call)(t.$tcb,\"COMMENT_DELETE_FOR_ADMIN\",{id:e._id});case 5:return n.next=7,t.getComments();case 7:t.loading=!1;case 8:case\"end\":return n.stop()}}),n)})))()},handleSpam:function(e,t){this.setComment(e,{isSpam:t})},handleTop:function(e,t){this.setComment(e,{top:t})},setComment:function(e,t){var n=this;return(0,o[\"default\"])(i[\"default\"].mark((function r(){return i[\"default\"].wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n.loading=!0,r.next=3,(0,s.call)(n.$tcb,\"COMMENT_SET_FOR_ADMIN\",{id:e._id,set:t});case 3:return r.next=5,n.getComments();case 5:n.loading=!1;case 6:case\"end\":return r.stop()}}),r)})))()},highlightCode:function(){\"true\"===this.serverConfig.HIGHLIGHT&&(0,s.renderCode)(this.$refs[\"comment-list\"],this.serverConfig.HIGHLIGHT_THEME)}},mounted:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.all([e.getConfig(),e.getComments()]);case 2:e.highlightCode();case 3:case\"end\":return t.stop()}}),t)})))()}};t.Z=d},2319:function(e,t,n){\"use strict\";var r=n(3330);Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var i=r(n(818)),o=r(n(8711)),a=n(2304),s=n(8521);function u(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if(\"string\"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,a=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,o=e},f:function(){try{a||null==n[\"return\"]||n[\"return\"]()}finally{if(s)throw o}}}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n0&&this.$refs[\"tk-replies\"]&&(this.hasExpand=this.$refs[\"tk-replies\"].scrollHeight>236)},scrollToComment:function(){-1!==window.location.hash.indexOf(this.comment.id)&&(this.$refs[\"tk-comment\"].scrollIntoView(),this.$emit(\"expand\"))},onLike:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.likeLoading){t.next=2;break}return t.abrupt(\"return\");case 2:return e.likeLoading=!0,t.next=5,(0,a.call)(e.$tcb,\"COMMENT_LIKE\",{id:e.comment.id});case 5:e.liked?e.like--:e.like++,e.liked=!e.liked,e.likeLoading=!1;case 8:case\"end\":return t.stop()}}),t)})))()},onReply:function(){this.$emit(\"reply\",this.comment.id)},onReplyReply:function(e){this.pid=e,this.$emit(\"reply\",this.comment.id)},onCancel:function(){this.pid=\"\",this.$emit(\"reply\",\"\")},onLoad:function(){this.pid=\"\",this.$emit(\"reply\",\"\"),this.$emit(\"load\"),this.onExpand()},onExpand:function(){this.isExpanded=!0},onCollapse:function(){this.isExpanded=!1},checkAuth:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.$tcb){t.next=7;break}return t.next=3,e.$tcb.auth.getCurrenUser();case 3:n=t.sent,e.isLogin=\"CUSTOM\"===n.loginType,t.next=8;break;case 7:e.isLogin=e.$twikoo.serverConfig&&e.$twikoo.serverConfig.IS_ADMIN;case 8:case\"end\":return t.stop()}}),t)})))()},handleSpam:function(e){this.setComment({isSpam:e})},handleTop:function(e){this.setComment({top:e})},setComment:function(e){var t=this;return(0,o[\"default\"])(i[\"default\"].mark((function n(){return i[\"default\"].wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t.loading=!0,n.next=3,(0,a.call)(t.$tcb,\"COMMENT_SET_FOR_ADMIN\",{id:t.comment.id,set:e});case 3:t.loading=!1,t.$emit(\"load\");case 5:case\"end\":return n.stop()}}),n)})))()}},mounted:function(){var e=this;this.$nextTick(this.showExpandIfNeed),this.$nextTick(this.scrollToComment),this.$nextTick((function(){(0,a.renderLinks)(e.$refs.comment),(0,a.renderMath)(e.$refs.comment,e.$twikoo.katex)})),this.checkAuth()},watch:{\"comment.like\":{handler:function(e){this.like=this.comment.like,this.liked=this.comment.liked},immediate:!0},\"config.HIGHLIGHT\":{handler:function(e){var t=this;\"true\"===e&&this.$nextTick((function(){(0,a.renderCode)(t.$refs.comment,t.config.HIGHLIGHT_THEME)}))},immediate:!0}}};t.Z=x},2650:function(e,t,n){\"use strict\";var r=n(3330);Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var i=r(n(818)),o=r(n(8711)),a=n(2304),s=r(n(8526)),u=r(n(5301)),c=r(n(2561)),l=r(n(6342)),d=r(n(1848)),f={components:{TkSubmit:s[\"default\"],TkComment:u[\"default\"]},props:{showAdminEntry:Boolean},data:function(){return{loading:!0,loadingMore:!1,errorMessage:\"\",config:{},comments:[],showExpand:!0,count:0,replyId:\"\",iconSetting:c[\"default\"],iconRefresh:l[\"default\"]}},methods:{t:a.t,initConfig:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,a.call)(e.$tcb,\"GET_CONFIG\");case 2:(n=t.sent)&&n.result&&n.result.config&&(e.config=n.result.config,d[\"default\"].prototype.$twikoo.serverConfig=n.result.config);case 4:case\"end\":return t.stop()}}),t)})))()},initComments:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.loading=!0,n=(0,a.getUrl)(e.$twikoo.path),t.next=4,e.getComments({url:n});case 4:e.loading=!1;case 5:case\"end\":return t.stop()}}),t)})))()},refresh:function(){this.comments=[],this.initComments()},onExpand:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n,r;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.loadingMore){t.next=2;break}return t.abrupt(\"return\");case 2:return e.loadingMore=!0,n=(0,a.getUrl)(e.$twikoo.path),r=e.comments.filter((function(e){return!e.top})).map((function(e){return e.created})).sort((function(e,t){return e-t}))[0],t.next=7,e.getComments({url:n,before:r});case 7:e.loadingMore=!1;case 8:case\"end\":return t.stop()}}),t)})))()},onCommentLoaded:function(){\"function\"==typeof this.$twikoo.onCommentLoaded&&this.$twikoo.onCommentLoaded()},getComments:function(e){var t=this;return(0,o[\"default\"])(i[\"default\"].mark((function n(){var r;return i[\"default\"].wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,(0,a.call)(t.$tcb,\"COMMENT_GET\",e);case 3:(r=n.sent)&&r.result&&r.result.data&&(t.comments=e.before?t.comments.concat(r.result.data):r.result.data,t.showExpand=r.result.more,t.count=r.result.count||t.comments.length||0,t.$nextTick(t.onCommentLoaded)),n.next=10;break;case 7:n.prev=7,n.t0=n[\"catch\"](0),t.errorMessage=n.t0.message;case 10:case\"end\":return n.stop()}}),n,null,[[0,7]])})))()},onReply:function(e){this.replyId=e},openAdmin:function(){this.$emit(\"admin\")}},mounted:function(){this.initConfig(),this.initComments()}};t.Z=f},4575:function(e,t,n){\"use strict\";var r=n(3330);Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var i=r(n(818)),o=r(n(8711)),a=n(8521),s=n(2304),u={data:function(){return{version:a.version,counter:{}}},methods:{getCounter:function(){var e=this;return(0,o[\"default\"])(i[\"default\"].mark((function t(){var n,r,o;return i[\"default\"].wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=document.getElementById(\"twikoo_visitors\")){t.next=3;break}return t.abrupt(\"return\");case 3:if(-1===[\"localhost\",\"127.0.0.1\",\"0.0.0.0\"].indexOf(window.location.hostname)){t.next=5;break}return t.abrupt(\"return\");case 5:return r=(0,s.getUrl)(e.$twikoo.path),t.next=8,(0,s.call)(e.$tcb,\"COUNTER_GET\",{url:r,href:window.location.href,title:document.title});case 8:o=t.sent,e.counter=o.result,(e.counter.time||0===e.counter.time)&&(n.innerHTML=e.counter.time);case 11:case\"end\":return t.stop()}}),t)})))()}},mounted:function(){this.getCounter()}};t.Z=u},7175:function(e,t,n){\"use strict\";Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var r=n(7588),i=n(2304),o=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,a={props:{nick:String,mail:String,link:String,config:Object},data:function(){return{metaInputs:[{key:\"nick\",locale:(0,i.t)(\"META_INPUT_NICK\"),name:\"nick\",type:\"text\"},{key:\"mail\",locale:(0,i.t)(\"META_INPUT_MAIL\"),name:\"mail\",type:\"email\"},{key:\"link\",locale:(0,i.t)(\"META_INPUT_LINK\"),name:\"link\",type:\"text\"}],metaData:{nick:\"\",mail:\"\",link:\"\"}}},computed:{requiredFields:function(){var e=this.config.REQUIRED_FIELDS;return{nick:!e||-1!==e.indexOf(\"nick\"),mail:!e||-1!==e.indexOf(\"mail\"),link:!!e&&-1!==e.indexOf(\"link\")}}},methods:{t:i.t,initMeta:function(){var e=localStorage.getItem(\"twikoo\");if(e){var t=JSON.parse(e);this.metaData.nick=t.nick,this.metaData.mail=t.mail,this.metaData.link=t.link}this.updateMeta()},updateMeta:function(){localStorage.setItem(\"twikoo\",JSON.stringify(this.metaData)),this.$emit(\"update\",{meta:this.metaData,valid:this.checkValid()})},checkValid:function(){var e=o.test(this.metaData.mail);return(this.metaData.nick||!this.requiredFields.nick)&&(e||!this.requiredFields.mail)&&(this.metaData.link||!this.requiredFields.link)},checkQQ:function(){if((0,i.isQQ)(this.metaData.nick)){var e=this.metaData.nick.replace(/@qq.com/gi,\"\"),t=\"\".concat(e,\"@qq.com\");this.metaData.mail=t,this.getQQNick(e)}},getQQNick:function(e){var t=this,n=\"https://tenapi.cn/qqname?qq=\".concat(e),r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState&&200===r.status){var e=JSON.parse(r.responseText);t.metaData.nick=e.name,t.updateMeta()}},r.open(\"GET\",n),r.send()},checkAdminCrypt:function(){var e=this.$root.$children[0],t=!this.config.HIDE_ADMIN_CRYPT||this.config.HIDE_ADMIN_CRYPT===this.metaData.nick;e.onShowAdminEntry(t)},onMetaChange:function(){this.checkQQ(),this.updateMeta(),this.checkAdminCrypt()}},watch:{nick:function(e){this.metaData.nick=e},mail:function(e){this.metaData.mail=e},link:function(e){this.metaData.link=e},requiredFields:{handler:function(e,t){this.$emit(\"update\",{meta:this.metaData,valid:this.checkValid()})},deep:!0},\"config.VERSION\":function(){this.checkAdminCrypt()}},mounted:function(){r.app.$on(\"initMeta\",this.initMeta),this.initMeta()}};t.Z=a},2201:function(e,t,n){\"use strict\";Object.defineProperty(t,\"X\",{value:!0}),t.Z=void 0;var r=n(2304),i={props:{pageSize:{type:Number,\"default\":10},total:{type:Number,\"default\":0}},data:function(){return{currentPage:1,userInput:0,userPageSize:0,pagers:[]}},computed:{pageCount:function(){return Math.ceil(this.total/this.pageSize)}},methods:{t:r.t,generatePager:function(){for(var e=[],t=1;t1?t.pop():\"\";if(-1!==h.indexOf(n.toLowerCase())){var r=this.getUserId(),i=\"\".concat(Date.now(),\"-\").concat(r),o=t.join(\".\");this.paste(this.getImagePlaceholder(i,n));var a=this.config.IMAGE_CDN;!this.$tcb||a&&\"qcloud\"!==a?a?this.uploadPhotoToThirdParty(i,o,n,e):this.uploadFailed(i,n,(0,f.t)(\"IMAGE_UPLOAD_FAILED_NO_CONF\")):this.uploadPhotoToQcloud(i,o,n,e)}}},getUserId:function(){return this.$tcb?this.$tcb.auth.currentUser.uid:localStorage.getItem(\"twikoo-access-token\")},uploadPhotoToQcloud:function(e,t,n,r){var a=this;return(0,o[\"default\"])(i[\"default\"].mark((function s(){var o,u,c;return i[\"default\"].wrap((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.next=3,a.$tcb.app.uploadFile({cloudPath:\"tk-img/\".concat(e,\".\").concat(n),filePath:r});case 3:if(!(o=i.sent).fileID){i.next=10;break}return i.next=7,a.$tcb.app.getTempFileURL({fileList:[o.fileID]});case 7:u=i.sent,c=u.fileList[0].tempFileURL,a.uploadCompleted(e,t,n,c);case 10:i.next=16;break;case 12:i.prev=12,i.t0=i[\"catch\"](0),console.error(i.t0),a.uploadFailed(e,n,i.t0.message);case 16:case\"end\":return i.stop()}}),s,null,[[0,12]])})))()},uploadPhotoToThirdParty:function(e,t,n,r){var a=this;return(0,o[\"default\"])(i[\"default\"].mark((function s(){var o,u,c;return i[\"default\"].wrap((function(i){for(;;)switch(i.prev=i.next){case 0:return i.prev=0,i.t0=f.call,i.t1=a.$tcb,i.t2=\"\".concat(e,\".\").concat(n),i.next=6,(0,f.blobToDataURL)(r);case 6:return i.t3=i.sent,i.t4={fileName:i.t2,photo:i.t3},i.next=10,(0,i.t0)(i.t1,\"UPLOAD_IMAGE\",i.t4);case 10:u=i.sent,(c=u.result).data?a.uploadCompleted(e,t,n,c.data.url):1040===c.code&&c.err&&(o=c.err.match(/this image exists at: (http[^ ]+)/))?(console.warn(c),a.uploadCompleted(e,t,n,o[1])):(console.error(c),a.uploadFailed(e,n,c.err)),i.next=19;break;case 15:i.prev=15,i.t5=i[\"catch\"](0),console.error(i.t5),a.uploadFailed(e,n,i.t5.message);case 19:case\"end\":return i.stop()}}),s,null,[[0,15]])})))()},uploadCompleted:function(e,t,n,r){this.comment=this.comment.replace(this.getImagePlaceholder(e,n),\"![\".concat(t,\"](\").concat(r,\")\")),this.$refs.inputFile.value=\"\"},uploadFailed:function(e,t,n){this.comment=this.comment.replace(this.getImagePlaceholder(e,t),\"_\".concat((0,f.t)(\"IMAGE_UPLOAD_FAILED\"),\": \").concat(n,\"_\")),this.$refs.inputFile.value=\"\"},paste:function(e){if(document.selection)document.selection.createRange().text=e;else if(this.textarea.selectionStart||0===this.textarea.selectionStart){var t=this.textarea.selectionStart,n=this.textarea.selectionEnd;this.comment=this.comment.substring(0,t)+e+this.comment.substring(n,this.comment.length),this.textarea.selectionStart=t+e.length,this.textarea.selectionEnd=t+e.length}else this.comment+=e},getImagePlaceholder:function(e,t){return\"![\".concat((0,f.t)(\"IMAGE_UPLOAD_PLACEHOLDER\"),\" \").concat(e,\".\").concat(t,\"]()\")}},mounted:function(){this.initDraft(),this.initOwo(),this.addEventListener(),this.onBgImgChange()},watch:{\"config.SHOW_EMOTION\":function(){this.initOwo()},\"config.COMMENT_BG_IMG\":function(){this.onBgImgChange()}}};t.Z=g},2469:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"twikoo\",attrs:{id:\"twikoo\"}},[t(\"tk-comments\",{attrs:{\"show-admin-entry\":e.showAdminEntry},on:{admin:function(t){e.showAdmin=!0}}}),e._v(\" \"),t(\"tk-footer\"),e._v(\" \"),t(\"tk-admin\",{attrs:{show:e.showAdmin},on:{close:function(t){e.showAdmin=!1}}})],1)},t.xk=[]},1979:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-action\"},[t(\"a\",{staticClass:\"tk-action-link\",\"class\":{\"tk-liked\":e.liked},on:{click:e.onLike}},[t(\"span\",{staticClass:\"tk-action-icon\",domProps:{innerHTML:e._s(e.iconLike)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-action-icon tk-action-icon-solid\",domProps:{innerHTML:e._s(e.iconLikeSolid)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-action-count\"},[e._v(e._s(e.likeCountStr))])]),e._v(\" \"),t(\"a\",{staticClass:\"tk-action-link\",on:{click:e.onReply}},[t(\"span\",{staticClass:\"tk-action-icon\",domProps:{innerHTML:e._s(e.iconComment)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-action-icon tk-action-icon-solid\",domProps:{innerHTML:e._s(e.iconCommentSolid)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-action-count\"},[e._v(e._s(e.repliesCountStr))])])])},t.xk=[]},7052:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-admin-container\"},[t(\"div\",{directives:[{name:\"loading\",rawName:\"v-loading\",value:e.loading,expression:\"loading\"}],staticClass:\"tk-admin\",\"class\":{__show:e.show}},[t(\"a\",{staticClass:\"tk-admin-close\",domProps:{innerHTML:e._s(e.iconClose)},on:{click:e.onClose}}),e._v(\" \"),e.needUpdate?t(\"div\",{staticClass:\"tk-login-title\"},[t(\"div\",[e._v(e._s(e.t(\"ADMIN_NEED_UPDATE\")))]),e._v(\" \"),t(\"a\",{attrs:{href:\"https://twikoo.js.org/quick-start.html\",target:\"_blank\"}},[e._v(\"https://twikoo.js.org/quick-start.html\")])]):e._e(),e._v(\" \"),e.needUpdate?e._e():t(\"div\",[!e.isLogin&&e.isSetPassword?t(\"div\",{staticClass:\"tk-login\"},[t(\"div\",{staticClass:\"tk-login-title\"},[e._v(e._s(e.t(\"ADMIN_LOGIN_TITLE\")))]),e._v(\" \"),t(\"input\",{attrs:{type:\"hidden\"}}),e._v(\" \"),t(\"el-input\",{ref:\"focusme\",staticClass:\"tk-password\",attrs:{placeholder:e.t(\"ADMIN_PASSWORD_PLACEHOLDER\"),\"show-password\":\"\"},nativeOn:{keyup:function(t){return!t.type.indexOf(\"key\")&&e._k(t.keyCode,\"enter\",13,t.key,\"Enter\")?null:e.onLogin.apply(null,arguments)}},model:{value:e.password,callback:function(t){e.password=t},expression:\"password\"}},[t(\"template\",{slot:\"prepend\"},[e._v(e._s(e.t(\"ADMIN_PASSWORD\")))]),e._v(\" \"),t(\"el-button\",{attrs:{slot:\"append\"},on:{click:e.onLogin},slot:\"append\"},[e._v(e._s(e.t(\"ADMIN_LOGIN\")))])],2),e._v(\" \"),e.loginErrorMessage?t(\"div\",{staticClass:\"tk-login-msg\"},[e._v(\"\\n \"+e._s(e.loginErrorMessage)+\"\\n \"),t(\"a\",{attrs:{href:\"https://twikoo.js.org/faq.html\",rel:\"noopener noreferrer\",target:\"_blank\"}},[e._v(e._s(e.t(\"ADMIN_FORGOT\")))])]):e._e()],1):e._e(),e._v(\" \"),e.isLogin||e.isSetPassword?e._e():t(\"div\",{staticClass:\"tk-regist\"},[t(\"div\",{staticClass:\"tk-login-title\"},[e._v(e._s(e.t(\"ADMIN_LOGIN_TITLE\")))]),e._v(\" \"),e.isSetCredentials?e._e():t(\"el-input\",{ref:\"focusme\",staticClass:\"tk-password\",attrs:{placeholder:e.t(\"ADMIN_CREDENTIALS_PLACEHOLDER\")},model:{value:e.credentials,callback:function(t){e.credentials=t},expression:\"credentials\"}},[t(\"template\",{slot:\"prepend\"},[e._v(e._s(e.t(\"ADMIN_CREDENTIALS\")))])],2),e._v(\" \"),t(\"el-input\",{staticClass:\"tk-password\",attrs:{placeholder:e.t(\"ADMIN_SET_PASSWORD_PLACEHOLDER\"),\"show-password\":\"\"},model:{value:e.password,callback:function(t){e.password=t},expression:\"password\"}},[t(\"template\",{slot:\"prepend\"},[e._v(e._s(e.t(\"ADMIN_SET_PASSWORD\")))])],2),e._v(\" \"),t(\"el-input\",{staticClass:\"tk-password\",attrs:{placeholder:e.t(\"ADMIN_SET_PASSWORD_CONFIRM_PLACEHOLDER\"),\"show-password\":\"\"},model:{value:e.passwordConfirm,callback:function(t){e.passwordConfirm=t},expression:\"passwordConfirm\"}},[t(\"template\",{slot:\"prepend\"},[e._v(e._s(e.t(\"ADMIN_SET_PASSWORD_CONFIRM\")))])],2),e._v(\" \"),t(\"el-button\",{staticClass:\"tk-regist-button\",attrs:{disabled:!e.canRegist},on:{click:e.onRegist}},[e._v(e._s(e.t(\"ADMIN_REGIST\")))]),e._v(\" \"),e.loginErrorMessage?t(\"div\",{staticClass:\"tk-login-msg\"},[e._v(e._s(e.loginErrorMessage))]):e._e(),e._v(\" \"),e.isSetCredentials?e._e():t(\"div\",{staticClass:\"tk-login-msg\"},[t(\"a\",{attrs:{href:\"https://twikoo.js.org/faq.html\",rel:\"noopener noreferrer\",target:\"_blank\"}},[e._v(e._s(e.t(\"ADMIN_CREDENTIALS_FAQ\")))])])],1),e._v(\" \"),e.isLogin?t(\"div\",{staticClass:\"tk-panel\"},[t(\"div\",{staticClass:\"tk-panel-title\"},[t(\"div\",[e._v(e._s(e.t(\"ADMIN_TITLE\")))]),e._v(\" \"),t(\"a\",{staticClass:\"tk-panel-logout\",on:{click:e.onLogout}},[e._v(e._s(e.t(\"ADMIN_LOGOUT\")))])]),e._v(\" \"),t(\"div\",{staticClass:\"tk-tabs\"},[t(\"div\",{staticClass:\"tk-tab\",\"class\":{__active:\"comment\"===e.activeTabName},on:{click:function(t){e.activeTabName=\"comment\"}}},[e._v(e._s(e.t(\"ADMIN_COMMENT\")))]),e._v(\" \"),t(\"div\",{staticClass:\"tk-tab\",\"class\":{__active:\"config\"===e.activeTabName},on:{click:function(t){e.activeTabName=\"config\"}}},[e._v(e._s(e.t(\"ADMIN_CONFIG\")))]),e._v(\" \"),t(\"div\",{staticClass:\"tk-tab\",\"class\":{__active:\"import\"===e.activeTabName},on:{click:function(t){e.activeTabName=\"import\"}}},[e._v(e._s(e.t(\"ADMIN_IMPORT\")))])]),e._v(\" \"),t(\"tk-admin-comment\",{directives:[{name:\"show\",rawName:\"v-show\",value:\"comment\"===e.activeTabName,expression:\"activeTabName === 'comment'\"}]}),e._v(\" \"),t(\"tk-admin-config\",{directives:[{name:\"show\",rawName:\"v-show\",value:\"config\"===e.activeTabName,expression:\"activeTabName === 'config'\"}]}),e._v(\" \"),t(\"tk-admin-import\",{directives:[{name:\"show\",rawName:\"v-show\",value:\"import\"===e.activeTabName,expression:\"activeTabName === 'import'\"}]})],1):e._e()])])])},t.xk=[]},3032:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{directives:[{name:\"loading\",rawName:\"v-loading\",value:e.loading,expression:\"loading\"}],staticClass:\"tk-admin-comment\"},[e.clientVersion!==e.serverVersion?t(\"div\",{staticClass:\"tk-admin-warn\"},[t(\"span\",[e._v(e._s(e.t(\"ADMIN_CLIENT_VERSION\"))+e._s(e.clientVersion)+\"，\")]),e._v(\" \"),t(\"span\",[e._v(e._s(e.t(\"ADMIN_SERVER_VERSION\"))+e._s(e.serverVersion)+\"，\")]),e._v(\" \"),e._m(0)]):e._e(),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-comment-filter\"},[t(\"el-input\",{staticClass:\"tk-admin-comment-filter-keyword\",attrs:{size:\"small\",placeholder:e.t(\"ADMIN_COMMENT_SEARCH_PLACEHOLDER\")},nativeOn:{keyup:function(t){return!t.type.indexOf(\"key\")&&e._k(t.keyCode,\"enter\",13,t.key,\"Enter\")?null:e.getComments.apply(null,arguments)}},model:{value:e.filter.keyword,callback:function(t){e.$set(e.filter,\"keyword\",t)},expression:\"filter.keyword\"}}),e._v(\" \"),t(\"select\",{directives:[{name:\"model\",rawName:\"v-model\",value:e.filter.type,expression:\"filter.type\"}],staticClass:\"tk-admin-comment-filter-type\",on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return\"_value\"in e?e._value:e.value}));e.$set(e.filter,\"type\",t.target.multiple?n:n[0])}}},[t(\"option\",{attrs:{value:\"\"}},[e._v(e._s(e.t(\"ADMIN_COMMENT_FILTER_ALL\")))]),e._v(\" \"),t(\"option\",{attrs:{value:\"VISIBLE\"}},[e._v(e._s(e.t(\"ADMIN_COMMENT_FILTER_VISIBLE\")))]),e._v(\" \"),t(\"option\",{attrs:{value:\"HIDDEN\"}},[e._v(e._s(e.t(\"ADMIN_COMMENT_FILTER_HIDDEN\")))])]),e._v(\" \"),t(\"el-button\",{attrs:{size:\"small\",type:\"primary\"},on:{click:e.getComments}},[e._v(e._s(e.t(\"ADMIN_COMMENT_SEARCH\")))])],1),e._v(\" \"),t(\"div\",{ref:\"comment-list\",staticClass:\"tk-admin-comment-list\"},e._l(e.comments,(function(n){return t(\"div\",{key:n._id,staticClass:\"tk-admin-comment-item\"},[t(\"div\",{staticClass:\"tk-admin-comment-meta\"},[t(\"tk-avatar\",{attrs:{config:e.serverConfig,avatar:n.avatar,mail:n.mail,link:n.link}}),e._v(\" \"),n.link?e._e():t(\"span\",[e._v(e._s(n.nick)+\" \")]),e._v(\" \"),n.link?t(\"a\",{attrs:{href:e.convertLink(n.link),target:\"_blank\"}},[e._v(e._s(n.nick)+\" \")]):e._e(),e._v(\" \"),n.mail?t(\"span\",[e._v(\"(\"),t(\"a\",{attrs:{href:\"mailto:\".concat(n.mail)}},[e._v(e._s(n.mail))]),e._v(\") \")]):e._e(),e._v(\" \"),n.isSpam?t(\"span\",[e._v(e._s(e.t(\"ADMIN_COMMENT_IS_SPAM_SUFFIX\"))+\" \")]):e._e(),e._v(\" \"),t(\"span\",{staticClass:\"tk-time\"},[e._v(e._s(e.displayCreated(n))+\" \")]),e._v(\" \"),t(\"span\",[e._v(e._s(n.ipRegion))])],1),e._v(\" \"),t(\"div\",{ref:\"comments\",refInFor:!0,staticClass:\"tk-content\",domProps:{innerHTML:e._s(n.comment)}}),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-actions\"},[t(\"el-button\",{attrs:{size:\"mini\",type:\"text\"},on:{click:function(t){return e.handleView(n)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_VIEW\")))]),e._v(\" \"),n.isSpam?t(\"el-button\",{attrs:{size:\"mini\",type:\"text\"},on:{click:function(t){return e.handleSpam(n,!1)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_SHOW\")))]):e._e(),e._v(\" \"),n.isSpam?e._e():t(\"el-button\",{attrs:{size:\"mini\",type:\"text\"},on:{click:function(t){return e.handleSpam(n,!0)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_HIDE\")))]),e._v(\" \"),!n.rid&&n.top?t(\"el-button\",{attrs:{size:\"mini\",type:\"text\"},on:{click:function(t){return e.handleTop(n,!1)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_UNTOP\")))]):e._e(),e._v(\" \"),n.rid||n.top?e._e():t(\"el-button\",{attrs:{size:\"mini\",type:\"text\"},on:{click:function(t){return e.handleTop(n,!0)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_TOP\")))]),e._v(\" \"),t(\"el-button\",{attrs:{size:\"mini\",type:\"text\"},on:{click:function(t){return e.handleDelete(n)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_DELETE\")))])],1)])})),0),e._v(\" \"),t(\"tk-pagination\",{attrs:{\"page-size\":e.pageSize,total:e.count},on:{\"page-size-change\":e.onPageSizeChange,\"current-change\":e.switchPage}})],1)},t.xk=[function(){var e=this,t=e._self._c;return t(\"span\",[e._v(\"请参考 \"),t(\"a\",{attrs:{href:\"https://twikoo.js.org/quick-start.html#%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0\",target:\"_blank\"}},[e._v(\"版本更新\")]),e._v(\" 进行升级\")])}]},4027:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{directives:[{name:\"loading\",rawName:\"v-loading\",value:e.loading,expression:\"loading\"}],staticClass:\"tk-admin-config\"},[e.clientVersion!==e.serverVersion?t(\"div\",{staticClass:\"tk-admin-warn\"},[t(\"span\",[e._v(e._s(e.t(\"ADMIN_CLIENT_VERSION\"))+e._s(e.clientVersion)+\"，\")]),e._v(\" \"),t(\"span\",[e._v(e._s(e.t(\"ADMIN_SERVER_VERSION\"))+e._s(e.serverVersion)+\"，\")]),e._v(\" \"),e._m(0)]):e._e(),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-groups\"},[e._l(e.settings,(function(n){return t(\"details\",{key:n.name,staticClass:\"tk-admin-config-group\"},[t(\"summary\",{staticClass:\"tk-admin-config-group-title\"},[e._v(e._s(n.name))]),e._v(\" \"),e._l(n.items,(function(n){return t(\"div\",{key:n.key,staticClass:\"tk-admin-config-item\"},[t(\"div\",{staticClass:\"tk-admin-config-title\",attrs:{title:n.key}},[e._v(e._s(n.key))]),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-input\"},[t(\"el-input\",{attrs:{placeholder:n.ph,size:\"small\",\"show-password\":n.secret},model:{value:n.value,callback:function(t){e.$set(n,\"value\",t)},expression:\"setting.value\"}})],1),e._v(\" \"),t(\"div\"),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-desc\"},[e._v(e._s(n.desc))])])}))],2)})),e._v(\" \"),t(\"details\",{staticClass:\"tk-admin-config-group\"},[t(\"summary\",{staticClass:\"tk-admin-config-group-title\"},[e._v(e._s(e.t(\"ADMIN_CONFIG_EMAIL_TEST\")))]),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-email-test\"},[t(\"div\",{staticClass:\"tk-admin-config-email-test-desc\"},[e._v(e._s(e.t(\"ADMIN_CONFIG_EMAIL_TEST_HELP\")))]),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-input\"},[t(\"el-input\",{attrs:{size:\"small\"},model:{value:e.emailTestAddress,callback:function(t){e.emailTestAddress=t},expression:\"emailTestAddress\"}},[t(\"el-button\",{attrs:{slot:\"append\",type:\"info\"},on:{click:e.testEmail},slot:\"append\"},[e._v(e._s(e.t(\"ADMIN_CONFIG_EMAIL_TEST_BTN\")))])],1)],1),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-email-test-desc\"},[e._v(e._s(e.t(\"ADMIN_CONFIG_EMAIL_TEST_RESULT\"))+e._s(e.emailTestResult))])])])],2),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-actions\"},[t(\"el-button\",{attrs:{size:\"small\",type:\"primary\"},on:{click:e.saveConfig}},[e._v(e._s(e.t(\"ADMIN_CONFIG_SAVE\")))]),e._v(\" \"),t(\"el-button\",{attrs:{size:\"small\",type:\"info\"},on:{click:e.resetConfig}},[e._v(e._s(e.t(\"ADMIN_CONFIG_RESET\")))])],1),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-config-message\"},[e._v(e._s(e.message))])])},t.xk=[function(){var e=this,t=e._self._c;return t(\"span\",[e._v(\"请参考 \"),t(\"a\",{attrs:{href:\"https://twikoo.js.org/quick-start.html#%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0\",target:\"_blank\"}},[e._v(\"版本更新\")]),e._v(\" 进行升级\")])}]},8247:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-admin-import\"},[t(\"div\",{staticClass:\"tk-admin-warn tk-admin-import-warn\"},[t(\"p\",[e._v(e._s(e.t(\"ADMIN_IMPORT_WARN\")))]),e._v(\" \"),t(\"p\",[e._v(e._s(e.warnText[e.source]))])]),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-import-label\"},[e._v(e._s(e.t(\"ADMIN_IMPORT_SELECT_SOURCE\")))]),e._v(\" \"),t(\"select\",{directives:[{name:\"model\",rawName:\"v-model\",value:e.source,expression:\"source\"}],on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return\"_value\"in e?e._value:e.value}));e.source=t.target.multiple?n:n[0]}}},[t(\"option\",{attrs:{disabled:\"\",value:\"\"}},[e._v(e._s(e.t(\"ADMIN_IMPORT_SELECT\")))]),e._v(\" \"),t(\"option\",{attrs:{value:\"valine\"}},[e._v(\"Valine (JSON)\")]),e._v(\" \"),t(\"option\",{attrs:{value:\"disqus\"}},[e._v(\"Disqus (XML)\")]),e._v(\" \"),t(\"option\",{attrs:{value:\"artalk\"}},[e._v(\"Artalk (JSON)\")]),e._v(\" \"),t(\"option\",{attrs:{value:\"twikoo\"}},[e._v(\"Twikoo (JSON)\")])]),e._v(\" \"),t(\"div\",{staticClass:\"tk-admin-import-label\"},[e._v(e._s(e.t(\"ADMIN_IMPORT_SELECT_FILE\")))]),e._v(\" \"),t(\"input\",{ref:\"inputFile\",attrs:{type:\"file\",value:\"\"}}),e._v(\" \"),t(\"el-button\",{attrs:{size:\"small\",disabled:e.loading},on:{click:e.uploadFile}},[e._v(e._s(e.t(\"ADMIN_IMPORT_START\")))]),e._v(\" \"),t(\"el-input\",{ref:\"logTextArea\",attrs:{type:\"textarea\",rows:10,placeholder:e.t(\"ADMIN_IMPORT_LOG\"),readonly:\"\"},model:{value:e.logText,callback:function(t){e.logText=t},expression:\"logText\"}})],1)},t.xk=[]},7417:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-avatar\",\"class\":{\"tk-clickable\":!!e.link,\"tk-has-avatar\":!!e.avatarInner},on:{click:e.onClick}},[e.avatarInner?e._e():t(\"div\",{staticClass:\"tk-avatar-img\",domProps:{innerHTML:e._s(e.iconUser)}}),e._v(\" \"),e.avatarInner?t(\"img\",{staticClass:\"tk-avatar-img\",attrs:{src:e.avatarInner,alt:\"\"}}):e._e()])},t.xk=[]},4428:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{ref:\"tk-comment\",staticClass:\"tk-comment\",\"class\":{\"tk-master\":e.comment.master},attrs:{id:e.comment.id}},[t(\"tk-avatar\",{attrs:{config:e.config,nick:e.comment.nick,avatar:e.comment.avatar,\"mail-md5\":e.comment.mailMd5,link:e.convertedLink}}),e._v(\" \"),t(\"div\",{staticClass:\"tk-main\"},[t(\"div\",{staticClass:\"tk-row\"},[t(\"div\",{staticClass:\"tk-meta\"},[e.convertedLink?e._e():t(\"strong\",{staticClass:\"tk-nick\"},[e._v(e._s(e.comment.nick))]),e._v(\" \"),e.convertedLink?t(\"a\",{staticClass:\"tk-nick tk-nick-link\",attrs:{href:e.convertedLink,target:\"_blank\",rel:\"noopener noreferrer\"}},[t(\"strong\",[e._v(e._s(e.comment.nick))])]):e._e(),e._v(\" \"),e.comment.master?t(\"span\",{staticClass:\"tk-tag tk-tag-green\"},[e._v(e._s(e.config.MASTER_TAG||e.t(\"COMMENT_MASTER_TAG\")))]):e._e(),e._v(\" \"),e.comment.top?t(\"span\",{staticClass:\"tk-tag tk-tag-red\"},[e._v(e._s(e.t(\"COMMENT_TOP_TAG\")))]):e._e(),e._v(\" \"),e.comment.isSpam?t(\"span\",{staticClass:\"tk-tag tk-tag-yellow\"},[e._v(e._s(e.t(\"COMMENT_REVIEWING_TAG\")))]):e._e(),e._v(\" \"),t(\"small\",{staticClass:\"tk-time\"},[t(\"time\",{attrs:{datetime:e.jsonTimestamp,title:e.localeTime}},[e._v(e._s(e.displayCreated))])]),e._v(\" \"),e.isLogin?t(\"small\",{staticClass:\"tk-actions\"},[e.comment.isSpam?t(\"a\",{on:{click:function(t){return e.handleSpam(!1)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_SHOW\")))]):e._e(),e._v(\" \"),e.comment.isSpam?e._e():t(\"a\",{on:{click:function(t){return e.handleSpam(!0)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_HIDE\")))]),e._v(\" \"),!e.comment.rid&&e.comment.top?t(\"a\",{on:{click:function(t){return e.handleTop(!1)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_UNTOP\")))]):e._e(),e._v(\" \"),e.comment.rid||e.comment.top?e._e():t(\"a\",{on:{click:function(t){return e.handleTop(!0)}}},[e._v(e._s(e.t(\"ADMIN_COMMENT_TOP\")))])]):e._e()]),e._v(\" \"),t(\"tk-action\",{attrs:{liked:e.liked,\"like-count\":e.like,\"replies-count\":e.comment.replies.length},on:{like:e.onLike,reply:e.onReply}})],1),e._v(\" \"),t(\"div\",{staticClass:\"tk-content\"},[e.comment.pid?t(\"span\",[e._v(e._s(e.t(\"COMMENT_REPLIED\"))+\" \"),t(\"a\",{staticClass:\"tk-ruser\",attrs:{href:\"#\".concat(e.comment.pid)}},[e._v(\"@\"+e._s(e.comment.ruser))]),e._v(\" :\")]):e._e(),e._v(\" \"),t(\"span\",{ref:\"comment\",domProps:{innerHTML:e._s(e.comment.comment)}})]),e._v(\" \"),e.comment.ipRegion||e.comment.os||e.comment.browser?t(\"div\",{staticClass:\"tk-extras\"},[e.comment.ipRegion?t(\"div\",{staticClass:\"tk-extra\"},[t(\"span\",{staticClass:\"tk-icon __comment\",domProps:{innerHTML:e._s(e.iconLocation)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-extra-text\"},[e._v(\" \"+e._s(e.comment.ipRegion))])]):e._e(),e._v(\" \"),e.comment.os?t(\"div\",{staticClass:\"tk-extra\"},[t(\"span\",{staticClass:\"tk-icon __comment\",domProps:{innerHTML:e._s(e.iconOs)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-extra-text\"},[e._v(\" \"+e._s(e.comment.os))])]):e._e(),e._v(\" \"),e.comment.browser?t(\"div\",{staticClass:\"tk-extra\"},[t(\"span\",{staticClass:\"tk-icon __comment\",domProps:{innerHTML:e._s(e.iconBrowser)}}),e._v(\" \"),t(\"span\",{staticClass:\"tk-extra-text\"},[e._v(\" \"+e._s(e.comment.browser))])]):e._e()]):e._e(),e._v(\" \"),t(\"div\",{ref:\"tk-replies\",staticClass:\"tk-replies\",\"class\":{\"tk-replies-expand\":e.isExpanded||!e.showExpand}},e._l(e.comment.replies,(function(n){return t(\"tk-comment\",{key:n.id,attrs:{comment:n,config:e.config},on:{expand:e.onExpand,load:e.onLoad,reply:e.onReplyReply}})})),1),e._v(\" \"),e.replying?t(\"tk-submit\",{attrs:{\"reply-id\":e.comment.id,pid:e.pid,config:e.config},on:{load:e.onLoad,cancel:e.onCancel}}):e._e(),e._v(\" \"),e.showExpand?t(\"div\",{staticClass:\"tk-expand\",on:{click:e.onExpand}},[e._v(e._s(e.t(\"COMMENT_EXPAND\")))]):e._e(),e._v(\" \"),e.showCollapse?t(\"div\",{staticClass:\"tk-expand _collapse\",on:{click:e.onCollapse}},[e._v(e._s(e.t(\"COMMENT_COLLAPSE\")))]):e._e()],1)],1)},t.xk=[]},4489:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-comments\"},[t(\"tk-submit\",{attrs:{config:e.config},on:{load:e.initComments}}),e._v(\" \"),t(\"div\",{directives:[{name:\"loading\",rawName:\"v-loading\",value:e.loading,expression:\"loading\"}],staticClass:\"tk-comments-container\"},[t(\"div\",{staticClass:\"tk-comments-title\"},[t(\"span\",{staticClass:\"tk-comments-count\",\"class\":{__hidden:!e.comments.length}},[t(\"span\",[e._v(e._s(e.count))]),e._v(\" \"),t(\"span\",[e._v(e._s(e.t(\"COMMENTS_COUNT_SUFFIX\")))])]),e._v(\" \"),t(\"span\",[e.loading||e.loadingMore?e._e():t(\"span\",{staticClass:\"tk-icon __comments\",domProps:{innerHTML:e._s(e.iconRefresh)},on:{click:e.refresh}}),e.showAdminEntry?t(\"span\",{staticClass:\"tk-icon __comments\",domProps:{innerHTML:e._s(e.iconSetting)},on:{click:e.openAdmin}}):e._e()])]),e._v(\" \"),e.loading||e.comments.length?e._e():t(\"div\",{staticClass:\"tk-comments-no\"},[e.errorMessage?e._e():t(\"span\",[e._v(e._s(e.t(\"COMMENTS_NO_COMMENTS\")))]),e._v(\" \"),e.errorMessage?t(\"span\",{staticClass:\"tk-comments-error\"},[e._v(e._s(e.errorMessage))]):e._e()]),e._v(\" \"),e._l(e.comments,(function(n){return t(\"tk-comment\",{key:n.id,attrs:{comment:n,replying:e.replyId===n.id,config:e.config},on:{reply:e.onReply,load:e.initComments}})})),e._v(\" \"),e.showExpand&&!e.loading?t(\"div\",{directives:[{name:\"loading\",rawName:\"v-loading\",value:e.loadingMore,expression:\"loadingMore\"}],staticClass:\"tk-expand\",on:{click:e.onExpand}},[e._v(e._s(e.t(\"COMMENTS_EXPAND\")))]):e._e()],2)],1)},t.xk=[]},5187:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-footer\"},[e._v(\"\\n Powered by \"),t(\"a\",{attrs:{href:\"https://twikoo.js.org\",target:\"_blank\"}},[e._v(\"Twikoo\")]),e._v(\"\\n v\"+e._s(e.version)+\"\\n\")])},t.xk=[]},9210:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-meta-input\"},e._l(e.metaInputs,(function(n){return t(\"el-input\",{key:n.key,attrs:{name:n.name,type:n.type,placeholder:e.requiredFields[n.key]?e.t(\"META_INPUT_REQUIRED\"):e.t(\"META_INPUT_NOT_REQUIRED\"),size:\"small\"},on:{change:e.onMetaChange},model:{value:e.metaData[n.key],callback:function(t){e.$set(e.metaData,n.key,t)},expression:\"metaData[metaInput.key]\"}},[t(\"template\",{slot:\"prepend\"},[e._v(e._s(n.locale))])],2)})),1)},t.xk=[]},1105:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-pagination\"},[e.pageCount?t(\"div\",{staticClass:\"tk-pagination-options\"},[t(\"div\",[t(\"span\",[e._v(e._s(e.t(\"PAGINATION_COUNT_PREFIX\")))]),e._v(\" \"),t(\"span\",[e._v(e._s(e.total))]),e._v(\" \"),t(\"span\",[e._v(e._s(e.t(\"PAGINATION_COUNT_SUFFIX\")))])]),e._v(\" \"),t(\"el-input\",{attrs:{type:\"number\",min:\"1\",max:\"100\",value:e.userPageSize?e.userPageSize:e.pageSize},on:{input:e.handleInputPageSize,change:e.pageSizeChamge}}),e._v(\" \"),t(\"span\",[e._v(e._s(e.t(\"PAGINATION_PAGESIZE\")))])],1):e._e(),e._v(\" \"),t(\"div\",{staticClass:\"tk-pagination-pagers\"},e._l(e.pagers,(function(n){return t(\"div\",{key:n.page,staticClass:\"tk-pagination-pager\",\"class\":{__current:n.page===e.currentPage},on:{click:function(t){return e.currentChange(n.page)}}},[e._v(e._s(n.title))])})),0),e._v(\" \"),e.pageCount?t(\"div\",{staticClass:\"tk-pagination-options\"},[t(\"span\",[e._v(e._s(e.t(\"PAGINATION_GOTO_PREFIX\")))]),e._v(\" \"),t(\"el-input\",{attrs:{type:\"number\",min:\"1\",max:e.pageCount,value:e.userInput?e.userInput:e.currentPage},on:{input:e.handleInput,change:e.currentChange}}),e._v(\" \"),t(\"span\",[e._v(e._s(e.t(\"PAGINATION_GOTO_SUFFIX\")))])],1):e._e()])},t.xk=[]},8407:function(e,t){\"use strict\";t.xk=t.sY=void 0,t.sY=function(){var e=this,t=e._self._c;return t(\"div\",{staticClass:\"tk-submit\"},[t(\"div\",{staticClass:\"tk-row\"},[t(\"tk-avatar\",{attrs:{config:e.config,mail:e.mail}}),e._v(\" \"),t(\"div\",{staticClass:\"tk-col\"},[t(\"tk-meta-input\",{attrs:{nick:e.nick,mail:e.mail,link:e.link,config:e.config},on:{update:e.onMetaUpdate}}),e._v(\" \"),t(\"el-input\",{ref:\"textarea\",staticClass:\"tk-input\",attrs:{type:\"textarea\",\"show-word-limit\":\"\",placeholder:e.commentPlaceholder,autosize:{minRows:3},maxlength:e.maxLength},on:{input:e.onCommentInput},nativeOn:{keyup:function(t){return!t.type.indexOf(\"key\")&&e._k(t.keyCode,\"enter\",13,t.key,\"Enter\")?null:e.onEnterKeyUp(t)}},model:{value:e.comment,callback:function(t){e.comment=t},expression:\"comment\"}})],1)],1),e._v(\" \"),t(\"div\",{staticClass:\"tk-row actions\"},[t(\"div\",{staticClass:\"tk-row-actions-start\"},[t(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:\"true\"===e.config.SHOW_EMOTION,expression:\"config.SHOW_EMOTION === 'true'\"},{name:\"clickoutside\",rawName:\"v-clickoutside\",value:e.closeOwo,expression:\"closeOwo\"}],ref:\"owo\",staticClass:\"tk-submit-action-icon OwO\",domProps:{innerHTML:e._s(e.iconEmotion)}}),e._v(\" \"),t(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:\"true\"===e.config.SHOW_IMAGE,expression:\"config.SHOW_IMAGE === 'true'\"}],staticClass:\"tk-submit-action-icon\",domProps:{innerHTML:e._s(e.iconImage)},on:{click:e.openSelectImage}}),e._v(\" \"),t(\"input\",{ref:\"inputFile\",staticClass:\"tk-input-image\",attrs:{type:\"file\",accept:\"image/*\",value:\"\"},on:{change:e.onSelectImage}}),e._v(\" \"),t(\"div\",{staticClass:\"tk-error-message\"},[e._v(e._s(e.errorMessage))])]),e._v(\" \"),t(\"a\",{staticClass:\"tk-submit-action-icon __markdown\",attrs:{alt:\"Markdown is supported\",href:\"https://guides.github.com/features/mastering-markdown/\",target:\"_blank\",rel:\"noopener noreferrer\"},domProps:{innerHTML:e._s(e.iconMarkdown)}}),e._v(\" \"),e.replyId?t(\"el-button\",{staticClass:\"tk-cancel\",attrs:{size:\"small\"},on:{click:e.cancel}},[e._v(e._s(e.t(\"SUBMIT_CANCEL\")))]):e._e(),e._v(\" \"),t(\"el-button\",{staticClass:\"tk-preview\",attrs:{size:\"small\"},on:{click:e.preview}},[e._v(e._s(e.t(\"SUBMIT_PREVIEW\")))]),e._v(\" \"),t(\"el-button\",{staticClass:\"tk-send\",attrs:{type:\"primary\",size:\"small\",disabled:!e.canSend},on:{click:e.send}},[e._v(e._s(e.isSending?e.t(\"SUBMIT_SENDING\"):e.t(\"SUBMIT_SEND\")))])],1),e._v(\" \"),e.isPreviewing?t(\"div\",{ref:\"comment-preview\",staticClass:\"tk-preview-container\",domProps:{innerHTML:e._s(e.commentHtml)}}):e._e()])},t.xk=[]},8666:function(e,t){\"use strict\";t.Z=function(e,t){for(var n=[],r={},i=0;i=0&&Math.floor(t)===t&&isFinite(e)}function _(e){return l(e)&&\"function\"==typeof e.then&&\"function\"==typeof e[\"catch\"]}function y(e){return null==e?\"\":Array.isArray(e)||m(e)&&e.toString===g?JSON.stringify(e,null,2):String(e)}function b(e){var t=parseFloat(e);return isNaN(t)?e:t}function k(e,t){for(var n=Object.create(null),r=e.split(\",\"),i=0;i-1)return e.splice(r,1)}}var x=Object.prototype.hasOwnProperty;function A(e,t){return x.call(e,t)}function C(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var D=/-(\\w)/g,I=C((function(e){return e.replace(D,(function(e,t){return t?t.toUpperCase():\"\"}))})),O=C((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),S=/\\B([A-Z])/g,T=C((function(e){return e.replace(S,\"-$1\").toLowerCase()})),M=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function N(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function F(e,t){for(var n in t)e[n]=t[n];return e}function P(e){for(var t={},n=0;n0;X&&X.indexOf(\"android\");var te=X&&/iphone|ipad|ipod|ios/.test(X);X&&/chrome\\/\\d+/.test(X),X&&/phantomjs/.test(X);var ne,re=X&&X.match(/firefox\\/(\\d+)/),ie={}.watch,oe=!1;if(Y)try{var ae={};Object.defineProperty(ae,\"passive\",{get:function(){oe=!0}}),window.addEventListener(\"test-passive\",null,ae)}catch(s){}var se=function(){return void 0===ne&&(ne=!Y&&\"undefined\"!=typeof n.g&&n.g.process&&\"server\"===n.g.process.env.VUE_ENV),ne},ue=Y&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ce(e){return\"function\"==typeof e&&/native code/.test(e.toString())}var le,de=\"undefined\"!=typeof Symbol&&ce(Symbol)&&\"undefined\"!=typeof Reflect&&ce(Reflect.ownKeys);le=\"undefined\"!=typeof Set&&ce(Set)?Set:function(){function e(){(0,i[\"default\"])(this,e),this.set=Object.create(null)}return(0,o[\"default\"])(e,[{key:\"has\",value:function(e){return!0===this.set[e]}},{key:\"add\",value:function(e){this.set[e]=!0}},{key:\"clear\",value:function(){this.set=Object.create(null)}}]),e}();var fe=null;function pe(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;e||fe&&fe._scope.off(),fe=e,e&&e._scope.on()}var he=function(){function e(t,n,r,o,a,s,u,c){(0,i[\"default\"])(this,e),this.tag=t,this.data=n,this.children=r,this.text=o,this.elm=a,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=u,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=c,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return(0,o[\"default\"])(e,[{key:\"child\",get:function(){return this.componentInstance}}]),e}(),ge=function(){var e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\",t=new he;return t.text=e,t.isComment=!0,t};function me(e){return new he(void 0,void 0,void 0,String(e))}function ve(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var _e=0,ye=[],be=function(){function e(){(0,i[\"default\"])(this,e),this._pending=!1,this.id=_e++,this.subs=[]}return(0,o[\"default\"])(e,[{key:\"addSub\",value:function(e){this.subs.push(e)}},{key:\"removeSub\",value:function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,ye.push(this))}},{key:\"depend\",value:function(t){e.target&&e.target.addDep(this)}},{key:\"notify\",value:function(e){for(var t=this.subs.filter((function(e){return e})),n=0,r=t.length;n2&&arguments[2]!==undefined&&arguments[2];if((0,i[\"default\"])(this,e),this.value=t,this.shallow=n,this.mock=r,this.dep=r?Se:new be,this.vmCount=0,W(t,\"__ob__\",this),u(t)){if(!r)if(Z)t.__proto__=Ae;else for(var o=0,a=Ce.length;o","link":"/xing/js/twikoo.min.js"}]}